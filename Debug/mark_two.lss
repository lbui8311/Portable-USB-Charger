
mark_two.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000072  00800100  00001002  00001076  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001002  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000010e8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001118  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00001158  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000014ba  00000000  00000000  000011d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000add  00000000  00000000  0000268a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000693  00000000  00000000  00003167  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000011c  00000000  00000000  000037fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000764  00000000  00000000  00003918  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007b6  00000000  00000000  0000407c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00004832  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__ctors_end>
       4:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
       8:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
       c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      10:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      14:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      18:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      1c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      20:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      24:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      28:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      2c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      30:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      34:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      38:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      3c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      40:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      44:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      48:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      4c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      50:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      54:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__vector_21>
      58:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      5c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      60:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      64:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      68:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      6c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      70:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      74:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      78:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      7c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      80:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      84:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      88:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      8c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      90:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      94:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      98:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      9c:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      a0:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      a4:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      a8:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      ac:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>
      b0:	0c 94 f4 00 	jmp	0x1e8	; 0x1e8 <__bad_interrupt>

000000b4 <__trampolines_end>:
      b4:	00 40       	sbci	r16, 0x00	; 0
      b6:	7a 10       	cpse	r7, r10
      b8:	f3 5a       	subi	r31, 0xA3	; 163
      ba:	00 a0       	ldd	r0, Z+32	; 0x20
      bc:	72 4e       	sbci	r23, 0xE2	; 226
      be:	18 09       	sbc	r17, r8
      c0:	00 10       	cpse	r0, r0
      c2:	a5 d4       	rcall	.+2378   	; 0xa0e <__gesf2+0x6>
      c4:	e8 00       	.word	0x00e8	; ????
      c6:	00 e8       	ldi	r16, 0x80	; 128
      c8:	76 48       	sbci	r23, 0x86	; 134
      ca:	17 00       	.word	0x0017	; ????
      cc:	00 e4       	ldi	r16, 0x40	; 64
      ce:	0b 54       	subi	r16, 0x4B	; 75
      d0:	02 00       	.word	0x0002	; ????
      d2:	00 ca       	rjmp	.-3072   	; 0xfffff4d4 <__eeprom_end+0xff7ef4d4>
      d4:	9a 3b       	cpi	r25, 0xBA	; 186
      d6:	00 00       	nop
      d8:	00 e1       	ldi	r16, 0x10	; 16
      da:	f5 05       	cpc	r31, r5
      dc:	00 00       	nop
      de:	80 96       	adiw	r24, 0x20	; 32
      e0:	98 00       	.word	0x0098	; ????
      e2:	00 00       	nop
      e4:	40 42       	sbci	r20, 0x20	; 32
      e6:	0f 00       	.word	0x000f	; ????
      e8:	00 00       	nop
      ea:	a0 86       	std	Z+8, r10	; 0x08
      ec:	01 00       	.word	0x0001	; ????
      ee:	00 00       	nop
      f0:	10 27       	eor	r17, r16
      f2:	00 00       	nop
      f4:	00 00       	nop
      f6:	e8 03       	fmulsu	r22, r16
      f8:	00 00       	nop
      fa:	00 00       	nop
      fc:	64 00       	.word	0x0064	; ????
      fe:	00 00       	nop
     100:	00 00       	nop
     102:	0a 00       	.word	0x000a	; ????
     104:	00 00       	nop
     106:	00 00       	nop
     108:	01 00       	.word	0x0001	; ????
     10a:	00 00       	nop
     10c:	00 00       	nop
     10e:	2c 76       	andi	r18, 0x6C	; 108
     110:	d8 88       	ldd	r13, Y+16	; 0x10
     112:	dc 67       	ori	r29, 0x7C	; 124
     114:	4f 08       	sbc	r4, r15
     116:	23 df       	rcall	.-442    	; 0xffffff5e <__eeprom_end+0xff7eff5e>
     118:	c1 df       	rcall	.-126    	; 0x9c <__SREG__+0x5d>
     11a:	ae 59       	subi	r26, 0x9E	; 158
     11c:	e1 b1       	in	r30, 0x01	; 1
     11e:	b7 96       	adiw	r30, 0x27	; 39
     120:	e5 e3       	ldi	r30, 0x35	; 53
     122:	e4 53       	subi	r30, 0x34	; 52
     124:	c6 3a       	cpi	r28, 0xA6	; 166
     126:	e6 51       	subi	r30, 0x16	; 22
     128:	99 76       	andi	r25, 0x69	; 105
     12a:	96 e8       	ldi	r25, 0x86	; 134
     12c:	e6 c2       	rjmp	.+1484   	; 0x6fa <__addsf3x+0x4c>
     12e:	84 26       	eor	r8, r20
     130:	eb 89       	ldd	r30, Y+19	; 0x13
     132:	8c 9b       	sbis	0x11, 4	; 17
     134:	62 ed       	ldi	r22, 0xD2	; 210
     136:	40 7c       	andi	r20, 0xC0	; 192
     138:	6f fc       	.word	0xfc6f	; ????
     13a:	ef bc       	out	0x2f, r14	; 47
     13c:	9c 9f       	mul	r25, r28
     13e:	40 f2       	brcs	.-112    	; 0xd0 <__trampolines_end+0x1c>
     140:	ba a5       	ldd	r27, Y+42	; 0x2a
     142:	6f a5       	ldd	r22, Y+47	; 0x2f
     144:	f4 90       	lpm	r15, Z
     146:	05 5a       	subi	r16, 0xA5	; 165
     148:	2a f7       	brpl	.-54     	; 0x114 <__trampolines_end+0x60>
     14a:	5c 93       	st	X, r21
     14c:	6b 6c       	ori	r22, 0xCB	; 203
     14e:	f9 67       	ori	r31, 0x79	; 121
     150:	6d c1       	rjmp	.+730    	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
     152:	1b fc       	.word	0xfc1b	; ????
     154:	e0 e4       	ldi	r30, 0x40	; 64
     156:	0d 47       	sbci	r16, 0x7D	; 125
     158:	fe f5       	brtc	.+126    	; 0x1d8 <.do_clear_bss_loop>
     15a:	20 e6       	ldi	r18, 0x60	; 96
     15c:	b5 00       	.word	0x00b5	; ????
     15e:	d0 ed       	ldi	r29, 0xD0	; 208
     160:	90 2e       	mov	r9, r16
     162:	03 00       	.word	0x0003	; ????
     164:	94 35       	cpi	r25, 0x54	; 84
     166:	77 05       	cpc	r23, r7
     168:	00 80       	ld	r0, Z
     16a:	84 1e       	adc	r8, r20
     16c:	08 00       	.word	0x0008	; ????
     16e:	00 20       	and	r0, r0
     170:	4e 0a       	sbc	r4, r30
     172:	00 00       	nop
     174:	00 c8       	rjmp	.-4096   	; 0xfffff176 <__eeprom_end+0xff7ef176>
     176:	0c 33       	cpi	r16, 0x3C	; 60
     178:	33 33       	cpi	r19, 0x33	; 51
     17a:	33 0f       	add	r19, r19
     17c:	98 6e       	ori	r25, 0xE8	; 232
     17e:	12 83       	std	Z+2, r17	; 0x02
     180:	11 41       	sbci	r17, 0x11	; 17
     182:	ef 8d       	ldd	r30, Y+31	; 0x1f
     184:	21 14       	cp	r2, r1
     186:	89 3b       	cpi	r24, 0xB9	; 185
     188:	e6 55       	subi	r30, 0x56	; 86
     18a:	16 cf       	rjmp	.-468    	; 0xffffffb8 <__eeprom_end+0xff7effb8>
     18c:	fe e6       	ldi	r31, 0x6E	; 110
     18e:	db 18       	sub	r13, r11
     190:	d1 84       	ldd	r13, Z+9	; 0x09
     192:	4b 38       	cpi	r20, 0x8B	; 139
     194:	1b f7       	brvc	.-58     	; 0x15c <__trampolines_end+0xa8>
     196:	7c 1d       	adc	r23, r12
     198:	90 1d       	adc	r25, r0
     19a:	a4 bb       	out	0x14, r26	; 20
     19c:	e4 24       	eor	r14, r4
     19e:	20 32       	cpi	r18, 0x20	; 32
     1a0:	84 72       	andi	r24, 0x24	; 36
     1a2:	5e 22       	and	r5, r30
     1a4:	81 00       	.word	0x0081	; ????
     1a6:	c9 f1       	breq	.+114    	; 0x21a <_Z8LCD_Initv>
     1a8:	24 ec       	ldi	r18, 0xC4	; 196
     1aa:	a1 e5       	ldi	r26, 0x51	; 81
     1ac:	3d 27       	eor	r19, r29

000001ae <__ctors_end>:
     1ae:	11 24       	eor	r1, r1
     1b0:	1f be       	out	0x3f, r1	; 63
     1b2:	cf ef       	ldi	r28, 0xFF	; 255
     1b4:	d8 e0       	ldi	r29, 0x08	; 8
     1b6:	de bf       	out	0x3e, r29	; 62
     1b8:	cd bf       	out	0x3d, r28	; 61

000001ba <__do_copy_data>:
     1ba:	11 e0       	ldi	r17, 0x01	; 1
     1bc:	a0 e0       	ldi	r26, 0x00	; 0
     1be:	b1 e0       	ldi	r27, 0x01	; 1
     1c0:	e2 e0       	ldi	r30, 0x02	; 2
     1c2:	f0 e1       	ldi	r31, 0x10	; 16
     1c4:	02 c0       	rjmp	.+4      	; 0x1ca <__do_copy_data+0x10>
     1c6:	05 90       	lpm	r0, Z+
     1c8:	0d 92       	st	X+, r0
     1ca:	a2 37       	cpi	r26, 0x72	; 114
     1cc:	b1 07       	cpc	r27, r17
     1ce:	d9 f7       	brne	.-10     	; 0x1c6 <__do_copy_data+0xc>

000001d0 <__do_clear_bss>:
     1d0:	21 e0       	ldi	r18, 0x01	; 1
     1d2:	a2 e7       	ldi	r26, 0x72	; 114
     1d4:	b1 e0       	ldi	r27, 0x01	; 1
     1d6:	01 c0       	rjmp	.+2      	; 0x1da <.do_clear_bss_start>

000001d8 <.do_clear_bss_loop>:
     1d8:	1d 92       	st	X+, r1

000001da <.do_clear_bss_start>:
     1da:	a2 37       	cpi	r26, 0x72	; 114
     1dc:	b2 07       	cpc	r27, r18
     1de:	e1 f7       	brne	.-8      	; 0x1d8 <.do_clear_bss_loop>
     1e0:	0e 94 ff 01 	call	0x3fe	; 0x3fe <main>
     1e4:	0c 94 ff 07 	jmp	0xffe	; 0xffe <_exit>

000001e8 <__bad_interrupt>:
     1e8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001ec <_Z7LCD_CMDh>:
	
int counter = 0;

void LCD_CMD (unsigned char cmd) // LCD Commands Setup
{
	LCD_DB = cmd;             // data lines are set to send command*
     1ec:	8b b9       	out	0x0b, r24	; 11
	PORTB &= ~(1 << LCD_RS);  // RS sets 0
     1ee:	85 b1       	in	r24, 0x05	; 5
     1f0:	8e 7f       	andi	r24, 0xFE	; 254
     1f2:	85 b9       	out	0x05, r24	; 5
	PORTB &= ~(1 << LCD_RW);  // RW sets 0
     1f4:	85 b1       	in	r24, 0x05	; 5
     1f6:	8d 7f       	andi	r24, 0xFD	; 253
     1f8:	85 b9       	out	0x05, r24	; 5
	PORTB |= (1 << LCD_EN);   // En sets 1
     1fa:	85 b1       	in	r24, 0x05	; 5
     1fc:	84 60       	ori	r24, 0x04	; 4
     1fe:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     200:	2f ef       	ldi	r18, 0xFF	; 255
     202:	81 ee       	ldi	r24, 0xE1	; 225
     204:	94 e0       	ldi	r25, 0x04	; 4
     206:	21 50       	subi	r18, 0x01	; 1
     208:	80 40       	sbci	r24, 0x00	; 0
     20a:	90 40       	sbci	r25, 0x00	; 0
     20c:	e1 f7       	brne	.-8      	; 0x206 <_Z7LCD_CMDh+0x1a>
     20e:	00 c0       	rjmp	.+0      	; 0x210 <_Z7LCD_CMDh+0x24>
     210:	00 00       	nop
	_delay_ms(100);
	PORTB &= ~(1 << LCD_EN);  // En sets 0
     212:	85 b1       	in	r24, 0x05	; 5
     214:	8b 7f       	andi	r24, 0xFB	; 251
     216:	85 b9       	out	0x05, r24	; 5
     218:	08 95       	ret

0000021a <_Z8LCD_Initv>:
	return;
}

void LCD_Init(void) // LCD Initialization
{
	LCD_CMD(0x38);          // initialization in 8-bit mode of 16X2 LCD
     21a:	88 e3       	ldi	r24, 0x38	; 56
     21c:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z7LCD_CMDh>
     220:	8f e9       	ldi	r24, 0x9F	; 159
     222:	9f e0       	ldi	r25, 0x0F	; 15
     224:	01 97       	sbiw	r24, 0x01	; 1
     226:	f1 f7       	brne	.-4      	; 0x224 <_Z8LCD_Initv+0xa>
     228:	00 c0       	rjmp	.+0      	; 0x22a <_Z8LCD_Initv+0x10>
     22a:	00 00       	nop
	_delay_ms(1);
	LCD_CMD(0x0C);          // display on, cursor off
     22c:	8c e0       	ldi	r24, 0x0C	; 12
     22e:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z7LCD_CMDh>
     232:	8f e9       	ldi	r24, 0x9F	; 159
     234:	9f e0       	ldi	r25, 0x0F	; 15
     236:	01 97       	sbiw	r24, 0x01	; 1
     238:	f1 f7       	brne	.-4      	; 0x236 <_Z8LCD_Initv+0x1c>
     23a:	00 c0       	rjmp	.+0      	; 0x23c <_Z8LCD_Initv+0x22>
     23c:	00 00       	nop
	_delay_ms(1);
	LCD_CMD(0x01);          // Clear Screen
     23e:	81 e0       	ldi	r24, 0x01	; 1
     240:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z7LCD_CMDh>
     244:	8f e9       	ldi	r24, 0x9F	; 159
     246:	9f e0       	ldi	r25, 0x0F	; 15
     248:	01 97       	sbiw	r24, 0x01	; 1
     24a:	f1 f7       	brne	.-4      	; 0x248 <_Z8LCD_Initv+0x2e>
     24c:	00 c0       	rjmp	.+0      	; 0x24e <_Z8LCD_Initv+0x34>
     24e:	00 00       	nop
	_delay_ms(1);
	LCD_CMD(0x06);          // Auto Cursor Increments
     250:	86 e0       	ldi	r24, 0x06	; 6
     252:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z7LCD_CMDh>
     256:	8f e9       	ldi	r24, 0x9F	; 159
     258:	9f e0       	ldi	r25, 0x0F	; 15
     25a:	01 97       	sbiw	r24, 0x01	; 1
     25c:	f1 f7       	brne	.-4      	; 0x25a <_Z8LCD_Initv+0x40>
     25e:	00 c0       	rjmp	.+0      	; 0x260 <_Z8LCD_Initv+0x46>
     260:	00 00       	nop
	_delay_ms(1);
	LCD_CMD(0x80);          // Move cursor to the beginning of first line
     262:	80 e8       	ldi	r24, 0x80	; 128
     264:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z7LCD_CMDh>
     268:	8f e9       	ldi	r24, 0x9F	; 159
     26a:	9f e0       	ldi	r25, 0x0F	; 15
     26c:	01 97       	sbiw	r24, 0x01	; 1
     26e:	f1 f7       	brne	.-4      	; 0x26c <_Z8LCD_Initv+0x52>
     270:	00 c0       	rjmp	.+0      	; 0x272 <_Z8LCD_Initv+0x58>
     272:	00 00       	nop
     274:	08 95       	ret

00000276 <_Z14LCD_Write_Charh>:
	return;
}

void LCD_Write_Char(unsigned char data) // LCD Write One Character
{
	LCD_DB = data;              // Single Character Data Bus Assignment
     276:	8b b9       	out	0x0b, r24	; 11
	PORTB |= (1 << LCD_RS);    // RS sets 1
     278:	85 b1       	in	r24, 0x05	; 5
     27a:	81 60       	ori	r24, 0x01	; 1
     27c:	85 b9       	out	0x05, r24	; 5
	PORTB &= ~(1 << LCD_RW);   // RW sets 0
     27e:	85 b1       	in	r24, 0x05	; 5
     280:	8d 7f       	andi	r24, 0xFD	; 253
     282:	85 b9       	out	0x05, r24	; 5
	PORTB |= (1 << LCD_EN);    // En sets 1
     284:	85 b1       	in	r24, 0x05	; 5
     286:	84 60       	ori	r24, 0x04	; 4
     288:	85 b9       	out	0x05, r24	; 5
     28a:	2f ef       	ldi	r18, 0xFF	; 255
     28c:	80 e7       	ldi	r24, 0x70	; 112
     28e:	92 e0       	ldi	r25, 0x02	; 2
     290:	21 50       	subi	r18, 0x01	; 1
     292:	80 40       	sbci	r24, 0x00	; 0
     294:	90 40       	sbci	r25, 0x00	; 0
     296:	e1 f7       	brne	.-8      	; 0x290 <_Z14LCD_Write_Charh+0x1a>
     298:	00 c0       	rjmp	.+0      	; 0x29a <_Z14LCD_Write_Charh+0x24>
     29a:	00 00       	nop
	_delay_ms(50);
	PORTB &= ~(1 << LCD_EN);   // En sets 0
     29c:	85 b1       	in	r24, 0x05	; 5
     29e:	8b 7f       	andi	r24, 0xFB	; 251
     2a0:	85 b9       	out	0x05, r24	; 5
     2a2:	08 95       	ret

000002a4 <_Z16LCD_Write_StringPc>:
	return ;
}

void LCD_Write_String(char *string) // LCD Write One String
{
     2a4:	0f 93       	push	r16
     2a6:	1f 93       	push	r17
     2a8:	cf 93       	push	r28
     2aa:	df 93       	push	r29
     2ac:	8c 01       	movw	r16, r24
	int i;
	for(i=0;string[i]!='\0';i++)
     2ae:	c0 e0       	ldi	r28, 0x00	; 0
     2b0:	d0 e0       	ldi	r29, 0x00	; 0
     2b2:	f8 01       	movw	r30, r16
     2b4:	ec 0f       	add	r30, r28
     2b6:	fd 1f       	adc	r31, r29
     2b8:	80 81       	ld	r24, Z
     2ba:	88 23       	and	r24, r24
     2bc:	21 f0       	breq	.+8      	; 0x2c6 <_Z16LCD_Write_StringPc+0x22>
	{
		char string_element = string[i];
		LCD_Write_Char(string_element); // Multiple Characters Data Bus Assignment
     2be:	0e 94 3b 01 	call	0x276	; 0x276 <_Z14LCD_Write_Charh>
}

void LCD_Write_String(char *string) // LCD Write One String
{
	int i;
	for(i=0;string[i]!='\0';i++)
     2c2:	21 96       	adiw	r28, 0x01	; 1
     2c4:	f6 cf       	rjmp	.-20     	; 0x2b2 <_Z16LCD_Write_StringPc+0xe>
	{
		char string_element = string[i];
		LCD_Write_Char(string_element); // Multiple Characters Data Bus Assignment
	}
}
     2c6:	df 91       	pop	r29
     2c8:	cf 91       	pop	r28
     2ca:	1f 91       	pop	r17
     2cc:	0f 91       	pop	r16
     2ce:	08 95       	ret

000002d0 <_Z8adc_initv>:
	return ADC;
}
**/
//-------------------------------------------------------------------------------------------------------
void adc_init(void){
	ADMUX &= ~(1 << REFS0 | 1 << REFS1); // AREF PIN Voltage Referencing
     2d0:	ec e7       	ldi	r30, 0x7C	; 124
     2d2:	f0 e0       	ldi	r31, 0x00	; 0
     2d4:	80 81       	ld	r24, Z
     2d6:	8f 73       	andi	r24, 0x3F	; 63
     2d8:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN | 1 << ADIE | 1 << ADPS0 | 1<< ADPS1 | 1 << ADPS2); // ADC ENABLE | ADC Interrupt Enable | ADC Pre-scaler = 128
     2da:	ea e7       	ldi	r30, 0x7A	; 122
     2dc:	f0 e0       	ldi	r31, 0x00	; 0
     2de:	80 81       	ld	r24, Z
     2e0:	8f 68       	ori	r24, 0x8F	; 143
     2e2:	80 83       	st	Z, r24
     2e4:	08 95       	ret

000002e6 <_Z14adc_pin_enableh>:
}

void adc_pin_enable(uint8_t pin){
	DIDR0 |= 1 << pin;
     2e6:	ee e7       	ldi	r30, 0x7E	; 126
     2e8:	f0 e0       	ldi	r31, 0x00	; 0
     2ea:	90 81       	ld	r25, Z
     2ec:	21 e0       	ldi	r18, 0x01	; 1
     2ee:	30 e0       	ldi	r19, 0x00	; 0
     2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <_Z14adc_pin_enableh+0x10>
     2f2:	22 0f       	add	r18, r18
     2f4:	33 1f       	adc	r19, r19
     2f6:	8a 95       	dec	r24
     2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <_Z14adc_pin_enableh+0xc>
     2fa:	29 2b       	or	r18, r25
     2fc:	20 83       	st	Z, r18
     2fe:	08 95       	ret

00000300 <_Z15adc_pin_disableh>:
}

void adc_pin_disable(uint8_t pin){
	DIDR0 &= ~(1 << pin);
     300:	ee e7       	ldi	r30, 0x7E	; 126
     302:	f0 e0       	ldi	r31, 0x00	; 0
     304:	90 81       	ld	r25, Z
     306:	21 e0       	ldi	r18, 0x01	; 1
     308:	30 e0       	ldi	r19, 0x00	; 0
     30a:	02 c0       	rjmp	.+4      	; 0x310 <_Z15adc_pin_disableh+0x10>
     30c:	22 0f       	add	r18, r18
     30e:	33 1f       	adc	r19, r19
     310:	8a 95       	dec	r24
     312:	e2 f7       	brpl	.-8      	; 0x30c <_Z15adc_pin_disableh+0xc>
     314:	20 95       	com	r18
     316:	29 23       	and	r18, r25
     318:	20 83       	st	Z, r18
     31a:	08 95       	ret

0000031c <_Z14adc_pin_selecth>:
}

void adc_pin_select(uint8_t pin){
	ADMUX &= ~(1 << MUX0 | 1 << MUX1 | 1 << MUX2 | 1 << MUX3); // Clear the 4 lower bits, leave the 4 higher bits alone.
     31c:	ec e7       	ldi	r30, 0x7C	; 124
     31e:	f0 e0       	ldi	r31, 0x00	; 0
     320:	90 81       	ld	r25, Z
     322:	90 7f       	andi	r25, 0xF0	; 240
     324:	90 83       	st	Z, r25
	ADMUX |= pin;
     326:	90 81       	ld	r25, Z
     328:	89 2b       	or	r24, r25
     32a:	80 83       	st	Z, r24
     32c:	08 95       	ret

0000032e <_Z28Battery_Discharge_Percentagef>:

// Logic for Battery Discharging
// 4.2V = 100% 
// 2.5 = 0%
uint8_t Battery_Discharge_Percentage(float voltage)
{
     32e:	cf 92       	push	r12
     330:	df 92       	push	r13
     332:	ef 92       	push	r14
     334:	ff 92       	push	r15
     336:	6b 01       	movw	r12, r22
     338:	7c 01       	movw	r14, r24
	float min_voltage = 2.5;
	float max_voltage = 4.2;
	
	if (voltage <= min_voltage)
     33a:	20 e0       	ldi	r18, 0x00	; 0
     33c:	30 e0       	ldi	r19, 0x00	; 0
     33e:	40 e2       	ldi	r20, 0x20	; 32
     340:	50 e4       	ldi	r21, 0x40	; 64
     342:	0e 94 ac 03 	call	0x758	; 0x758 <__cmpsf2>
     346:	18 16       	cp	r1, r24
     348:	5c f4       	brge	.+22     	; 0x360 <_Z28Battery_Discharge_Percentagef+0x32>
	{
		voltage = min_voltage;
	}
	else if (voltage >= max_voltage)
     34a:	26 e6       	ldi	r18, 0x66	; 102
     34c:	36 e6       	ldi	r19, 0x66	; 102
     34e:	46 e8       	ldi	r20, 0x86	; 134
     350:	50 e4       	ldi	r21, 0x40	; 64
     352:	c7 01       	movw	r24, r14
     354:	b6 01       	movw	r22, r12
     356:	0e 94 04 05 	call	0xa08	; 0xa08 <__gesf2>
     35a:	88 23       	and	r24, r24
     35c:	44 f4       	brge	.+16     	; 0x36e <_Z28Battery_Discharge_Percentagef+0x40>
     35e:	10 c0       	rjmp	.+32     	; 0x380 <_Z28Battery_Discharge_Percentagef+0x52>
	float min_voltage = 2.5;
	float max_voltage = 4.2;
	
	if (voltage <= min_voltage)
	{
		voltage = min_voltage;
     360:	c1 2c       	mov	r12, r1
     362:	d1 2c       	mov	r13, r1
     364:	76 01       	movw	r14, r12
     366:	68 94       	set
     368:	e5 f8       	bld	r14, 5
     36a:	f6 f8       	bld	r15, 6
     36c:	09 c0       	rjmp	.+18     	; 0x380 <_Z28Battery_Discharge_Percentagef+0x52>
	}
	else if (voltage >= max_voltage)
	{
		voltage = max_voltage;
     36e:	0f 2e       	mov	r0, r31
     370:	f6 e6       	ldi	r31, 0x66	; 102
     372:	cf 2e       	mov	r12, r31
     374:	dc 2c       	mov	r13, r12
     376:	f6 e8       	ldi	r31, 0x86	; 134
     378:	ef 2e       	mov	r14, r31
     37a:	f0 e4       	ldi	r31, 0x40	; 64
     37c:	ff 2e       	mov	r15, r31
     37e:	f0 2d       	mov	r31, r0
	}
	
	uint8_t percent = (((voltage - min_voltage) / (max_voltage - min_voltage)) * 100);
     380:	20 e0       	ldi	r18, 0x00	; 0
     382:	30 e0       	ldi	r19, 0x00	; 0
     384:	40 e2       	ldi	r20, 0x20	; 32
     386:	50 e4       	ldi	r21, 0x40	; 64
     388:	c7 01       	movw	r24, r14
     38a:	b6 01       	movw	r22, r12
     38c:	0e 94 3f 03 	call	0x67e	; 0x67e <__subsf3>
     390:	28 e9       	ldi	r18, 0x98	; 152
     392:	39 e9       	ldi	r19, 0x99	; 153
     394:	49 ed       	ldi	r20, 0xD9	; 217
     396:	5f e3       	ldi	r21, 0x3F	; 63
     398:	0e 94 b1 03 	call	0x762	; 0x762 <__divsf3>
     39c:	20 e0       	ldi	r18, 0x00	; 0
     39e:	30 e0       	ldi	r19, 0x00	; 0
     3a0:	48 ec       	ldi	r20, 0xC8	; 200
     3a2:	52 e4       	ldi	r21, 0x42	; 66
     3a4:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
     3a8:	0e 94 23 04 	call	0x846	; 0x846 <__fixunssfsi>
     3ac:	86 2f       	mov	r24, r22
	
	return percent;
}
     3ae:	ff 90       	pop	r15
     3b0:	ef 90       	pop	r14
     3b2:	df 90       	pop	r13
     3b4:	cf 90       	pop	r12
     3b6:	08 95       	ret

000003b8 <__vector_21>:

uint8_t Button_Pressed(uint8_t counter);

volatile static uint8_t adc_done_flag = 1;

ISR(ADC_vect){
     3b8:	1f 92       	push	r1
     3ba:	0f 92       	push	r0
     3bc:	0f b6       	in	r0, 0x3f	; 63
     3be:	0f 92       	push	r0
     3c0:	11 24       	eor	r1, r1
     3c2:	8f 93       	push	r24
	adc_done_flag = 1;
     3c4:	81 e0       	ldi	r24, 0x01	; 1
     3c6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
}
     3ca:	8f 91       	pop	r24
     3cc:	0f 90       	pop	r0
     3ce:	0f be       	out	0x3f, r0	; 63
     3d0:	0f 90       	pop	r0
     3d2:	1f 90       	pop	r1
     3d4:	18 95       	reti

000003d6 <_Z11adc_convertv>:

uint16_t adc_convert(void){
	uint8_t adcl = 0;
	uint8_t adch = 0;
	
	adc_done_flag = 0;
     3d6:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
	
	ADCSRA |= 1 << ADSC; // Start the conversion
     3da:	ea e7       	ldi	r30, 0x7A	; 122
     3dc:	f0 e0       	ldi	r31, 0x00	; 0
     3de:	80 81       	ld	r24, Z
     3e0:	80 64       	ori	r24, 0x40	; 64
     3e2:	80 83       	st	Z, r24
	
	while(adc_done_flag == 0); // Wait until conversion is done
     3e4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     3e8:	88 23       	and	r24, r24
     3ea:	e1 f3       	breq	.-8      	; 0x3e4 <_Z11adc_convertv+0xe>
	
	adcl = ADCL;
     3ec:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
	adch = ADCH;
     3f0:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
	
	return (adch << 8 | adcl); // returning 16 bit data
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	98 2f       	mov	r25, r24
     3f8:	88 27       	eor	r24, r24
}
     3fa:	82 2b       	or	r24, r18
     3fc:	08 95       	ret

000003fe <main>:

int main(void)
{
     3fe:	cf 93       	push	r28
     400:	df 93       	push	r29
     402:	cd b7       	in	r28, 0x3d	; 61
     404:	de b7       	in	r29, 0x3e	; 62
     406:	ec 97       	sbiw	r28, 0x3c	; 60
     408:	0f b6       	in	r0, 0x3f	; 63
     40a:	f8 94       	cli
     40c:	de bf       	out	0x3e, r29	; 62
     40e:	0f be       	out	0x3f, r0	; 63
     410:	cd bf       	out	0x3d, r28	; 61
	float adc_temperature = 0.0;
	float temperature_voltage = 0.0;
	float resistance = 0.0;
	float temperature = 0.0;
	
	DDRD |= (1 << DDD0 | 1 << DDD1 | 1 << DDD2 | 1 << DDD3 | 1 << DDD4 | 1 << DDD5 | 1 << DDD6 | 1 << DDD7); // Setting LCD data ports (7-14) as output
     412:	8a b1       	in	r24, 0x0a	; 10
     414:	8f ef       	ldi	r24, 0xFF	; 255
     416:	8a b9       	out	0x0a, r24	; 10
	DDRB |= (1 << DDB0 | 1 << DDB1 | 1 << DDB2); // Setting LCD control signals (RS, RW, E) as output
     418:	84 b1       	in	r24, 0x04	; 4
     41a:	87 60       	ori	r24, 0x07	; 7
     41c:	84 b9       	out	0x04, r24	; 4

	DDRC &= ~(1 << DDC2 | 1 << DDC5); // Set physical push button & BQ Stat as inputs
     41e:	87 b1       	in	r24, 0x07	; 7
     420:	8b 7d       	andi	r24, 0xDB	; 219
     422:	87 b9       	out	0x07, r24	; 7
	DDRC |= (1 << DDC3 | 1 << DDC4); // Set Port C3 as output to internal switch #1
     424:	87 b1       	in	r24, 0x07	; 7
     426:	88 61       	ori	r24, 0x18	; 24
     428:	87 b9       	out	0x07, r24	; 7
	PORTB |= (1 << PORTB3); // Button input
     42a:	85 b1       	in	r24, 0x05	; 5
     42c:	88 60       	ori	r24, 0x08	; 8
     42e:	85 b9       	out	0x05, r24	; 5
	PORTC &= ~(1 << PORTC5); // BQ stat input
     430:	88 b1       	in	r24, 0x08	; 8
     432:	8f 7d       	andi	r24, 0xDF	; 223
     434:	88 b9       	out	0x08, r24	; 8
	PORTC |= (1 << PORTC3 | 1 << PORTC4); // Internal switches control: high => off => open circuit
     436:	88 b1       	in	r24, 0x08	; 8
     438:	88 61       	ori	r24, 0x18	; 24
     43a:	88 b9       	out	0x08, r24	; 8
	
	adc_init();
     43c:	0e 94 68 01 	call	0x2d0	; 0x2d0 <_Z8adc_initv>
	sei();
     440:	78 94       	sei
	
	while(1)
	{
		PORTC &= ~(1 << PORTC4); // Internal USB switch control: low => on => closed circuit
     442:	88 b1       	in	r24, 0x08	; 8
     444:	8f 7e       	andi	r24, 0xEF	; 239
     446:	88 b9       	out	0x08, r24	; 8
		if(!(PINB & (1 << PINB3))) { // Button pressed (0)
     448:	1b 99       	sbic	0x03, 3	; 3
     44a:	fb cf       	rjmp	.-10     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
			PORTC &= ~(1 << PORTC3); //Internal switch #1 control: low => on => closed circuit
     44c:	88 b1       	in	r24, 0x08	; 8
     44e:	87 7f       	andi	r24, 0xF7	; 247
     450:	88 b9       	out	0x08, r24	; 8

			// First screen
			LCD_Init();             // initialize LCD
     452:	0e 94 0d 01 	call	0x21a	; 0x21a <_Z8LCD_Initv>
			LCD_Write_String("SDSU ECE-492 T#4");
     456:	81 e0       	ldi	r24, 0x01	; 1
     458:	91 e0       	ldi	r25, 0x01	; 1
     45a:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
     45e:	8f e3       	ldi	r24, 0x3F	; 63
     460:	9c e9       	ldi	r25, 0x9C	; 156
     462:	01 97       	sbiw	r24, 0x01	; 1
     464:	f1 f7       	brne	.-4      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
     466:	00 c0       	rjmp	.+0      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     468:	00 00       	nop
			_delay_ms(10);
			LCD_CMD(0xC0);          // move cursor to the start of 2nd line
     46a:	80 ec       	ldi	r24, 0xC0	; 192
     46c:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z7LCD_CMDh>
     470:	8f e3       	ldi	r24, 0x3F	; 63
     472:	9c e9       	ldi	r25, 0x9C	; 156
     474:	01 97       	sbiw	r24, 0x01	; 1
     476:	f1 f7       	brne	.-4      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
     478:	00 c0       	rjmp	.+0      	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
     47a:	00 00       	nop
			_delay_ms(10);
			LCD_Write_String("Portable Charger");
     47c:	82 e1       	ldi	r24, 0x12	; 18
     47e:	91 e0       	ldi	r25, 0x01	; 1
     480:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
     484:	9f ef       	ldi	r25, 0xFF	; 255
     486:	23 ed       	ldi	r18, 0xD3	; 211
     488:	80 e3       	ldi	r24, 0x30	; 48
     48a:	91 50       	subi	r25, 0x01	; 1
     48c:	20 40       	sbci	r18, 0x00	; 0
     48e:	80 40       	sbci	r24, 0x00	; 0
     490:	e1 f7       	brne	.-8      	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
     492:	00 c0       	rjmp	.+0      	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
     494:	00 00       	nop
			
			_delay_ms(1000);
			
			LCD_CMD(0x01);				// Clear screen
     496:	81 e0       	ldi	r24, 0x01	; 1
     498:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z7LCD_CMDh>

			adc_pin_enable(ADC0_VOLTAGE_PIN);
     49c:	80 e0       	ldi	r24, 0x00	; 0
     49e:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_Z14adc_pin_enableh>
			adc_pin_select(ADC0_VOLTAGE_PIN);
     4a2:	80 e0       	ldi	r24, 0x00	; 0
     4a4:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z14adc_pin_selecth>
			
			adc_volt = adc_convert();
     4a8:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_Z11adc_convertv>
     4ac:	bc 01       	movw	r22, r24
     4ae:	80 e0       	ldi	r24, 0x00	; 0
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	0e 94 52 04 	call	0x8a4	; 0x8a4 <__floatunsisf>
			volts = ADC_voltage(adc_volt);
     4b6:	29 ee       	ldi	r18, 0xE9	; 233
     4b8:	36 e2       	ldi	r19, 0x26	; 38
     4ba:	45 ea       	ldi	r20, 0xA5	; 165
     4bc:	5b e3       	ldi	r21, 0x3B	; 59
     4be:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
     4c2:	4b 01       	movw	r8, r22
     4c4:	5c 01       	movw	r10, r24
			percent = Battery_Discharge_Percentage(volts);		// Calculate Battery Percentage
     4c6:	0e 94 97 01 	call	0x32e	; 0x32e <_Z28Battery_Discharge_Percentagef>
     4ca:	e8 2e       	mov	r14, r24
     4cc:	f1 2c       	mov	r15, r1
			adc_pin_disable(ADC0_VOLTAGE_PIN);
     4ce:	80 e0       	ldi	r24, 0x00	; 0
     4d0:	0e 94 80 01 	call	0x300	; 0x300 <_Z15adc_pin_disableh>


			dtostrf(volts, 4, 2, buffer_voltage);
     4d4:	8e 01       	movw	r16, r28
     4d6:	0f 5f       	subi	r16, 0xFF	; 255
     4d8:	1f 4f       	sbci	r17, 0xFF	; 255
     4da:	22 e0       	ldi	r18, 0x02	; 2
     4dc:	44 e0       	ldi	r20, 0x04	; 4
     4de:	c5 01       	movw	r24, r10
     4e0:	b4 01       	movw	r22, r8
     4e2:	0e 94 76 05 	call	0xaec	; 0xaec <dtostrf>
			dtostrf(percent, 4, 0, buffer_percent);
     4e6:	b7 01       	movw	r22, r14
     4e8:	0f 2c       	mov	r0, r15
     4ea:	00 0c       	add	r0, r0
     4ec:	88 0b       	sbc	r24, r24
     4ee:	99 0b       	sbc	r25, r25
     4f0:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__floatsisf>
     4f4:	08 5d       	subi	r16, 0xD8	; 216
     4f6:	1f 4f       	sbci	r17, 0xFF	; 255
     4f8:	20 e0       	ldi	r18, 0x00	; 0
     4fa:	44 e0       	ldi	r20, 0x04	; 4
     4fc:	0e 94 76 05 	call	0xaec	; 0xaec <dtostrf>
			
			// SECOND SCREEN
			LCD_CMD(0x80);				// move cursor to the start of 1st line
     500:	80 e8       	ldi	r24, 0x80	; 128
     502:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z7LCD_CMDh>
			LCD_Write_String("BATTERY:");
     506:	83 e2       	ldi	r24, 0x23	; 35
     508:	91 e0       	ldi	r25, 0x01	; 1
     50a:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
			if((PINC & (1 << PINC5))) {	// If BQ Status Pin High
     50e:	35 9b       	sbis	0x06, 5	; 6
     510:	12 c0       	rjmp	.+36     	; 0x536 <__EEPROM_REGION_LENGTH__+0x136>
				LCD_Write_String(" ...");
     512:	8c e2       	ldi	r24, 0x2C	; 44
     514:	91 e0       	ldi	r25, 0x01	; 1
     516:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
				LCD_CMD(0xC0);
     51a:	80 ec       	ldi	r24, 0xC0	; 192
     51c:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z7LCD_CMDh>
     520:	8f e3       	ldi	r24, 0x3F	; 63
     522:	9c e9       	ldi	r25, 0x9C	; 156
     524:	01 97       	sbiw	r24, 0x01	; 1
     526:	f1 f7       	brne	.-4      	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
     528:	00 c0       	rjmp	.+0      	; 0x52a <__EEPROM_REGION_LENGTH__+0x12a>
     52a:	00 00       	nop
				_delay_ms(10);
				LCD_Write_String("STATUS: ");
     52c:	81 e3       	ldi	r24, 0x31	; 49
     52e:	91 e0       	ldi	r25, 0x01	; 1
     530:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
     534:	15 c0       	rjmp	.+42     	; 0x560 <__EEPROM_REGION_LENGTH__+0x160>
			}
			else {
				LCD_Write_String(buffer_percent);
     536:	ce 01       	movw	r24, r28
     538:	89 96       	adiw	r24, 0x29	; 41
     53a:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
				LCD_Write_String(" %");
     53e:	8a e3       	ldi	r24, 0x3A	; 58
     540:	91 e0       	ldi	r25, 0x01	; 1
     542:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
				LCD_CMD(0xC0);				// move cursor to the start of 2nd line
     546:	80 ec       	ldi	r24, 0xC0	; 192
     548:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z7LCD_CMDh>
     54c:	8f e3       	ldi	r24, 0x3F	; 63
     54e:	9c e9       	ldi	r25, 0x9C	; 156
     550:	01 97       	sbiw	r24, 0x01	; 1
     552:	f1 f7       	brne	.-4      	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
     554:	00 c0       	rjmp	.+0      	; 0x556 <__EEPROM_REGION_LENGTH__+0x156>
     556:	00 00       	nop
				_delay_ms(10);
				LCD_Write_String("STATUS: ");
     558:	81 e3       	ldi	r24, 0x31	; 49
     55a:	91 e0       	ldi	r25, 0x01	; 1
     55c:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
			}

			if((PINC & (1 << PINC5))) {	// If BQ Status Pin High
     560:	35 9b       	sbis	0x06, 5	; 6
     562:	0e c0       	rjmp	.+28     	; 0x580 <__EEPROM_REGION_LENGTH__+0x180>
				if (percent >= 100) {
     564:	94 e6       	ldi	r25, 0x64	; 100
     566:	e9 16       	cp	r14, r25
     568:	f1 04       	cpc	r15, r1
     56a:	2c f0       	brlt	.+10     	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
					LCD_Write_String("FULL");
     56c:	8d e3       	ldi	r24, 0x3D	; 61
     56e:	91 e0       	ldi	r25, 0x01	; 1
     570:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
     574:	12 c0       	rjmp	.+36     	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
				}
				else {
					LCD_Write_String("CHARGING");
     576:	82 e4       	ldi	r24, 0x42	; 66
     578:	91 e0       	ldi	r25, 0x01	; 1
     57a:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
     57e:	0d c0       	rjmp	.+26     	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
				}
			}
			else {
				if (percent <= 10) {
     580:	2b e0       	ldi	r18, 0x0B	; 11
     582:	e2 16       	cp	r14, r18
     584:	f1 04       	cpc	r15, r1
     586:	2c f4       	brge	.+10     	; 0x592 <__EEPROM_REGION_LENGTH__+0x192>
					LCD_Write_String("RE-CHARGE");
     588:	8b e4       	ldi	r24, 0x4B	; 75
     58a:	91 e0       	ldi	r25, 0x01	; 1
     58c:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
     590:	04 c0       	rjmp	.+8      	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
				}
				else {
					LCD_Write_String("READY");
     592:	85 e5       	ldi	r24, 0x55	; 85
     594:	91 e0       	ldi	r25, 0x01	; 1
     596:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
     59a:	8f ef       	ldi	r24, 0xFF	; 255
     59c:	93 ed       	ldi	r25, 0xD3	; 211
     59e:	20 e3       	ldi	r18, 0x30	; 48
     5a0:	81 50       	subi	r24, 0x01	; 1
     5a2:	90 40       	sbci	r25, 0x00	; 0
     5a4:	20 40       	sbci	r18, 0x00	; 0
     5a6:	e1 f7       	brne	.-8      	; 0x5a0 <__EEPROM_REGION_LENGTH__+0x1a0>
     5a8:	00 c0       	rjmp	.+0      	; 0x5aa <__EEPROM_REGION_LENGTH__+0x1aa>
     5aa:	00 00       	nop
				}
			}
			_delay_ms(1000);

			LCD_CMD(0x01);				// Clear screen
     5ac:	81 e0       	ldi	r24, 0x01	; 1
     5ae:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z7LCD_CMDh>

			adc_pin_enable(PINC2);
     5b2:	82 e0       	ldi	r24, 0x02	; 2
     5b4:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_Z14adc_pin_enableh>
			adc_pin_select(PINC2);
     5b8:	82 e0       	ldi	r24, 0x02	; 2
     5ba:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z14adc_pin_selecth>
			
			adc_temperature = adc_convert();
     5be:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_Z11adc_convertv>
     5c2:	bc 01       	movw	r22, r24
     5c4:	80 e0       	ldi	r24, 0x00	; 0
     5c6:	90 e0       	ldi	r25, 0x00	; 0
     5c8:	0e 94 52 04 	call	0x8a4	; 0x8a4 <__floatunsisf>
			temperature_voltage = ADC_voltage(adc_temperature);
     5cc:	29 ee       	ldi	r18, 0xE9	; 233
     5ce:	36 e2       	ldi	r19, 0x26	; 38
     5d0:	45 ea       	ldi	r20, 0xA5	; 165
     5d2:	5b e3       	ldi	r21, 0x3B	; 59
     5d4:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
			temperature_voltage = (((temperature_voltage) + .010) * 1000) - 55;
     5d8:	2a e0       	ldi	r18, 0x0A	; 10
     5da:	37 ed       	ldi	r19, 0xD7	; 215
     5dc:	43 e2       	ldi	r20, 0x23	; 35
     5de:	5c e3       	ldi	r21, 0x3C	; 60
     5e0:	0e 94 40 03 	call	0x680	; 0x680 <__addsf3>
     5e4:	20 e0       	ldi	r18, 0x00	; 0
     5e6:	30 e0       	ldi	r19, 0x00	; 0
     5e8:	4a e7       	ldi	r20, 0x7A	; 122
     5ea:	54 e4       	ldi	r21, 0x44	; 68
     5ec:	0e 94 09 05 	call	0xa12	; 0xa12 <__mulsf3>
     5f0:	20 e0       	ldi	r18, 0x00	; 0
     5f2:	30 e0       	ldi	r19, 0x00	; 0
     5f4:	4c e5       	ldi	r20, 0x5C	; 92
     5f6:	52 e4       	ldi	r21, 0x42	; 66
     5f8:	0e 94 3f 03 	call	0x67e	; 0x67e <__subsf3>
     5fc:	4b 01       	movw	r8, r22
     5fe:	5c 01       	movw	r10, r24
			adc_pin_disable(PINC2);
     600:	82 e0       	ldi	r24, 0x02	; 2
     602:	0e 94 80 01 	call	0x300	; 0x300 <_Z15adc_pin_disableh>
			//temperature = (1 / temperature) * (9 / 5) + 32;	// Temperature in F
			
			// temp_volts = ADC_voltage(temperature_voltage) - 0.058;
			
			//dtostrf(temperature, 2, 0, buffer_temperature);
			dtostrf((temperature_voltage), 4, 2, buffer_temperature);
     606:	8e 01       	movw	r16, r28
     608:	0b 5e       	subi	r16, 0xEB	; 235
     60a:	1f 4f       	sbci	r17, 0xFF	; 255
     60c:	22 e0       	ldi	r18, 0x02	; 2
     60e:	44 e0       	ldi	r20, 0x04	; 4
     610:	c5 01       	movw	r24, r10
     612:	b4 01       	movw	r22, r8
     614:	0e 94 76 05 	call	0xaec	; 0xaec <dtostrf>
			
			LCD_CMD(0x80);				// move cursor to the start of 1st line
     618:	80 e8       	ldi	r24, 0x80	; 128
     61a:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z7LCD_CMDh>
			LCD_Write_String("VOLTAGE: ");
     61e:	8b e5       	ldi	r24, 0x5B	; 91
     620:	91 e0       	ldi	r25, 0x01	; 1
     622:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
			LCD_Write_String(buffer_voltage);
     626:	ce 01       	movw	r24, r28
     628:	01 96       	adiw	r24, 0x01	; 1
     62a:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
			LCD_Write_String(" V");
     62e:	85 e6       	ldi	r24, 0x65	; 101
     630:	91 e0       	ldi	r25, 0x01	; 1
     632:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
     636:	8f e3       	ldi	r24, 0x3F	; 63
     638:	9c e9       	ldi	r25, 0x9C	; 156
     63a:	01 97       	sbiw	r24, 0x01	; 1
     63c:	f1 f7       	brne	.-4      	; 0x63a <__EEPROM_REGION_LENGTH__+0x23a>
     63e:	00 c0       	rjmp	.+0      	; 0x640 <__EEPROM_REGION_LENGTH__+0x240>
     640:	00 00       	nop
			_delay_ms(10);
			LCD_CMD(0xC0);				// move cursor to the start of 2nd line
     642:	80 ec       	ldi	r24, 0xC0	; 192
     644:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z7LCD_CMDh>
			LCD_Write_String("TEMP: ");
     648:	88 e6       	ldi	r24, 0x68	; 104
     64a:	91 e0       	ldi	r25, 0x01	; 1
     64c:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
			LCD_Write_String(buffer_temperature);
     650:	c8 01       	movw	r24, r16
     652:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
			LCD_Write_String(" F");
     656:	8f e6       	ldi	r24, 0x6F	; 111
     658:	91 e0       	ldi	r25, 0x01	; 1
     65a:	0e 94 52 01 	call	0x2a4	; 0x2a4 <_Z16LCD_Write_StringPc>
     65e:	9f ef       	ldi	r25, 0xFF	; 255
     660:	23 ed       	ldi	r18, 0xD3	; 211
     662:	80 e3       	ldi	r24, 0x30	; 48
     664:	91 50       	subi	r25, 0x01	; 1
     666:	20 40       	sbci	r18, 0x00	; 0
     668:	80 40       	sbci	r24, 0x00	; 0
     66a:	e1 f7       	brne	.-8      	; 0x664 <__EEPROM_REGION_LENGTH__+0x264>
     66c:	00 c0       	rjmp	.+0      	; 0x66e <__EEPROM_REGION_LENGTH__+0x26e>
     66e:	00 00       	nop
			_delay_ms(1000);
			LCD_CMD(0x01);				// Clear screen
     670:	81 e0       	ldi	r24, 0x01	; 1
     672:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z7LCD_CMDh>
			PORTC |= (1 << PORTC3); // Internal switch #1 control: high => off => open circuit
     676:	88 b1       	in	r24, 0x08	; 8
     678:	88 60       	ori	r24, 0x08	; 8
     67a:	88 b9       	out	0x08, r24	; 8
     67c:	e2 ce       	rjmp	.-572    	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>

0000067e <__subsf3>:
     67e:	50 58       	subi	r21, 0x80	; 128

00000680 <__addsf3>:
     680:	bb 27       	eor	r27, r27
     682:	aa 27       	eor	r26, r26
     684:	0e 94 57 03 	call	0x6ae	; 0x6ae <__addsf3x>
     688:	0c 94 ca 04 	jmp	0x994	; 0x994 <__fp_round>
     68c:	0e 94 bc 04 	call	0x978	; 0x978 <__fp_pscA>
     690:	38 f0       	brcs	.+14     	; 0x6a0 <__addsf3+0x20>
     692:	0e 94 c3 04 	call	0x986	; 0x986 <__fp_pscB>
     696:	20 f0       	brcs	.+8      	; 0x6a0 <__addsf3+0x20>
     698:	39 f4       	brne	.+14     	; 0x6a8 <__addsf3+0x28>
     69a:	9f 3f       	cpi	r25, 0xFF	; 255
     69c:	19 f4       	brne	.+6      	; 0x6a4 <__addsf3+0x24>
     69e:	26 f4       	brtc	.+8      	; 0x6a8 <__addsf3+0x28>
     6a0:	0c 94 b9 04 	jmp	0x972	; 0x972 <__fp_nan>
     6a4:	0e f4       	brtc	.+2      	; 0x6a8 <__addsf3+0x28>
     6a6:	e0 95       	com	r30
     6a8:	e7 fb       	bst	r30, 7
     6aa:	0c 94 b3 04 	jmp	0x966	; 0x966 <__fp_inf>

000006ae <__addsf3x>:
     6ae:	e9 2f       	mov	r30, r25
     6b0:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__fp_split3>
     6b4:	58 f3       	brcs	.-42     	; 0x68c <__addsf3+0xc>
     6b6:	ba 17       	cp	r27, r26
     6b8:	62 07       	cpc	r22, r18
     6ba:	73 07       	cpc	r23, r19
     6bc:	84 07       	cpc	r24, r20
     6be:	95 07       	cpc	r25, r21
     6c0:	20 f0       	brcs	.+8      	; 0x6ca <__addsf3x+0x1c>
     6c2:	79 f4       	brne	.+30     	; 0x6e2 <__addsf3x+0x34>
     6c4:	a6 f5       	brtc	.+104    	; 0x72e <__addsf3x+0x80>
     6c6:	0c 94 fd 04 	jmp	0x9fa	; 0x9fa <__fp_zero>
     6ca:	0e f4       	brtc	.+2      	; 0x6ce <__addsf3x+0x20>
     6cc:	e0 95       	com	r30
     6ce:	0b 2e       	mov	r0, r27
     6d0:	ba 2f       	mov	r27, r26
     6d2:	a0 2d       	mov	r26, r0
     6d4:	0b 01       	movw	r0, r22
     6d6:	b9 01       	movw	r22, r18
     6d8:	90 01       	movw	r18, r0
     6da:	0c 01       	movw	r0, r24
     6dc:	ca 01       	movw	r24, r20
     6de:	a0 01       	movw	r20, r0
     6e0:	11 24       	eor	r1, r1
     6e2:	ff 27       	eor	r31, r31
     6e4:	59 1b       	sub	r21, r25
     6e6:	99 f0       	breq	.+38     	; 0x70e <__addsf3x+0x60>
     6e8:	59 3f       	cpi	r21, 0xF9	; 249
     6ea:	50 f4       	brcc	.+20     	; 0x700 <__addsf3x+0x52>
     6ec:	50 3e       	cpi	r21, 0xE0	; 224
     6ee:	68 f1       	brcs	.+90     	; 0x74a <__addsf3x+0x9c>
     6f0:	1a 16       	cp	r1, r26
     6f2:	f0 40       	sbci	r31, 0x00	; 0
     6f4:	a2 2f       	mov	r26, r18
     6f6:	23 2f       	mov	r18, r19
     6f8:	34 2f       	mov	r19, r20
     6fa:	44 27       	eor	r20, r20
     6fc:	58 5f       	subi	r21, 0xF8	; 248
     6fe:	f3 cf       	rjmp	.-26     	; 0x6e6 <__addsf3x+0x38>
     700:	46 95       	lsr	r20
     702:	37 95       	ror	r19
     704:	27 95       	ror	r18
     706:	a7 95       	ror	r26
     708:	f0 40       	sbci	r31, 0x00	; 0
     70a:	53 95       	inc	r21
     70c:	c9 f7       	brne	.-14     	; 0x700 <__addsf3x+0x52>
     70e:	7e f4       	brtc	.+30     	; 0x72e <__addsf3x+0x80>
     710:	1f 16       	cp	r1, r31
     712:	ba 0b       	sbc	r27, r26
     714:	62 0b       	sbc	r22, r18
     716:	73 0b       	sbc	r23, r19
     718:	84 0b       	sbc	r24, r20
     71a:	ba f0       	brmi	.+46     	; 0x74a <__addsf3x+0x9c>
     71c:	91 50       	subi	r25, 0x01	; 1
     71e:	a1 f0       	breq	.+40     	; 0x748 <__addsf3x+0x9a>
     720:	ff 0f       	add	r31, r31
     722:	bb 1f       	adc	r27, r27
     724:	66 1f       	adc	r22, r22
     726:	77 1f       	adc	r23, r23
     728:	88 1f       	adc	r24, r24
     72a:	c2 f7       	brpl	.-16     	; 0x71c <__addsf3x+0x6e>
     72c:	0e c0       	rjmp	.+28     	; 0x74a <__addsf3x+0x9c>
     72e:	ba 0f       	add	r27, r26
     730:	62 1f       	adc	r22, r18
     732:	73 1f       	adc	r23, r19
     734:	84 1f       	adc	r24, r20
     736:	48 f4       	brcc	.+18     	; 0x74a <__addsf3x+0x9c>
     738:	87 95       	ror	r24
     73a:	77 95       	ror	r23
     73c:	67 95       	ror	r22
     73e:	b7 95       	ror	r27
     740:	f7 95       	ror	r31
     742:	9e 3f       	cpi	r25, 0xFE	; 254
     744:	08 f0       	brcs	.+2      	; 0x748 <__addsf3x+0x9a>
     746:	b0 cf       	rjmp	.-160    	; 0x6a8 <__addsf3+0x28>
     748:	93 95       	inc	r25
     74a:	88 0f       	add	r24, r24
     74c:	08 f0       	brcs	.+2      	; 0x750 <__addsf3x+0xa2>
     74e:	99 27       	eor	r25, r25
     750:	ee 0f       	add	r30, r30
     752:	97 95       	ror	r25
     754:	87 95       	ror	r24
     756:	08 95       	ret

00000758 <__cmpsf2>:
     758:	0e 94 8f 04 	call	0x91e	; 0x91e <__fp_cmp>
     75c:	08 f4       	brcc	.+2      	; 0x760 <__cmpsf2+0x8>
     75e:	81 e0       	ldi	r24, 0x01	; 1
     760:	08 95       	ret

00000762 <__divsf3>:
     762:	0e 94 c5 03 	call	0x78a	; 0x78a <__divsf3x>
     766:	0c 94 ca 04 	jmp	0x994	; 0x994 <__fp_round>
     76a:	0e 94 c3 04 	call	0x986	; 0x986 <__fp_pscB>
     76e:	58 f0       	brcs	.+22     	; 0x786 <__divsf3+0x24>
     770:	0e 94 bc 04 	call	0x978	; 0x978 <__fp_pscA>
     774:	40 f0       	brcs	.+16     	; 0x786 <__divsf3+0x24>
     776:	29 f4       	brne	.+10     	; 0x782 <__divsf3+0x20>
     778:	5f 3f       	cpi	r21, 0xFF	; 255
     77a:	29 f0       	breq	.+10     	; 0x786 <__divsf3+0x24>
     77c:	0c 94 b3 04 	jmp	0x966	; 0x966 <__fp_inf>
     780:	51 11       	cpse	r21, r1
     782:	0c 94 fe 04 	jmp	0x9fc	; 0x9fc <__fp_szero>
     786:	0c 94 b9 04 	jmp	0x972	; 0x972 <__fp_nan>

0000078a <__divsf3x>:
     78a:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__fp_split3>
     78e:	68 f3       	brcs	.-38     	; 0x76a <__divsf3+0x8>

00000790 <__divsf3_pse>:
     790:	99 23       	and	r25, r25
     792:	b1 f3       	breq	.-20     	; 0x780 <__divsf3+0x1e>
     794:	55 23       	and	r21, r21
     796:	91 f3       	breq	.-28     	; 0x77c <__divsf3+0x1a>
     798:	95 1b       	sub	r25, r21
     79a:	55 0b       	sbc	r21, r21
     79c:	bb 27       	eor	r27, r27
     79e:	aa 27       	eor	r26, r26
     7a0:	62 17       	cp	r22, r18
     7a2:	73 07       	cpc	r23, r19
     7a4:	84 07       	cpc	r24, r20
     7a6:	38 f0       	brcs	.+14     	; 0x7b6 <__divsf3_pse+0x26>
     7a8:	9f 5f       	subi	r25, 0xFF	; 255
     7aa:	5f 4f       	sbci	r21, 0xFF	; 255
     7ac:	22 0f       	add	r18, r18
     7ae:	33 1f       	adc	r19, r19
     7b0:	44 1f       	adc	r20, r20
     7b2:	aa 1f       	adc	r26, r26
     7b4:	a9 f3       	breq	.-22     	; 0x7a0 <__divsf3_pse+0x10>
     7b6:	35 d0       	rcall	.+106    	; 0x822 <__DATA_REGION_LENGTH__+0x22>
     7b8:	0e 2e       	mov	r0, r30
     7ba:	3a f0       	brmi	.+14     	; 0x7ca <__divsf3_pse+0x3a>
     7bc:	e0 e8       	ldi	r30, 0x80	; 128
     7be:	32 d0       	rcall	.+100    	; 0x824 <__DATA_REGION_LENGTH__+0x24>
     7c0:	91 50       	subi	r25, 0x01	; 1
     7c2:	50 40       	sbci	r21, 0x00	; 0
     7c4:	e6 95       	lsr	r30
     7c6:	00 1c       	adc	r0, r0
     7c8:	ca f7       	brpl	.-14     	; 0x7bc <__divsf3_pse+0x2c>
     7ca:	2b d0       	rcall	.+86     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
     7cc:	fe 2f       	mov	r31, r30
     7ce:	29 d0       	rcall	.+82     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
     7d0:	66 0f       	add	r22, r22
     7d2:	77 1f       	adc	r23, r23
     7d4:	88 1f       	adc	r24, r24
     7d6:	bb 1f       	adc	r27, r27
     7d8:	26 17       	cp	r18, r22
     7da:	37 07       	cpc	r19, r23
     7dc:	48 07       	cpc	r20, r24
     7de:	ab 07       	cpc	r26, r27
     7e0:	b0 e8       	ldi	r27, 0x80	; 128
     7e2:	09 f0       	breq	.+2      	; 0x7e6 <__divsf3_pse+0x56>
     7e4:	bb 0b       	sbc	r27, r27
     7e6:	80 2d       	mov	r24, r0
     7e8:	bf 01       	movw	r22, r30
     7ea:	ff 27       	eor	r31, r31
     7ec:	93 58       	subi	r25, 0x83	; 131
     7ee:	5f 4f       	sbci	r21, 0xFF	; 255
     7f0:	3a f0       	brmi	.+14     	; 0x800 <__DATA_REGION_LENGTH__>
     7f2:	9e 3f       	cpi	r25, 0xFE	; 254
     7f4:	51 05       	cpc	r21, r1
     7f6:	78 f0       	brcs	.+30     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
     7f8:	0c 94 b3 04 	jmp	0x966	; 0x966 <__fp_inf>
     7fc:	0c 94 fe 04 	jmp	0x9fc	; 0x9fc <__fp_szero>
     800:	5f 3f       	cpi	r21, 0xFF	; 255
     802:	e4 f3       	brlt	.-8      	; 0x7fc <__divsf3_pse+0x6c>
     804:	98 3e       	cpi	r25, 0xE8	; 232
     806:	d4 f3       	brlt	.-12     	; 0x7fc <__divsf3_pse+0x6c>
     808:	86 95       	lsr	r24
     80a:	77 95       	ror	r23
     80c:	67 95       	ror	r22
     80e:	b7 95       	ror	r27
     810:	f7 95       	ror	r31
     812:	9f 5f       	subi	r25, 0xFF	; 255
     814:	c9 f7       	brne	.-14     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     816:	88 0f       	add	r24, r24
     818:	91 1d       	adc	r25, r1
     81a:	96 95       	lsr	r25
     81c:	87 95       	ror	r24
     81e:	97 f9       	bld	r25, 7
     820:	08 95       	ret
     822:	e1 e0       	ldi	r30, 0x01	; 1
     824:	66 0f       	add	r22, r22
     826:	77 1f       	adc	r23, r23
     828:	88 1f       	adc	r24, r24
     82a:	bb 1f       	adc	r27, r27
     82c:	62 17       	cp	r22, r18
     82e:	73 07       	cpc	r23, r19
     830:	84 07       	cpc	r24, r20
     832:	ba 07       	cpc	r27, r26
     834:	20 f0       	brcs	.+8      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     836:	62 1b       	sub	r22, r18
     838:	73 0b       	sbc	r23, r19
     83a:	84 0b       	sbc	r24, r20
     83c:	ba 0b       	sbc	r27, r26
     83e:	ee 1f       	adc	r30, r30
     840:	88 f7       	brcc	.-30     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
     842:	e0 95       	com	r30
     844:	08 95       	ret

00000846 <__fixunssfsi>:
     846:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <__fp_splitA>
     84a:	88 f0       	brcs	.+34     	; 0x86e <__fixunssfsi+0x28>
     84c:	9f 57       	subi	r25, 0x7F	; 127
     84e:	98 f0       	brcs	.+38     	; 0x876 <__fixunssfsi+0x30>
     850:	b9 2f       	mov	r27, r25
     852:	99 27       	eor	r25, r25
     854:	b7 51       	subi	r27, 0x17	; 23
     856:	b0 f0       	brcs	.+44     	; 0x884 <__fixunssfsi+0x3e>
     858:	e1 f0       	breq	.+56     	; 0x892 <__fixunssfsi+0x4c>
     85a:	66 0f       	add	r22, r22
     85c:	77 1f       	adc	r23, r23
     85e:	88 1f       	adc	r24, r24
     860:	99 1f       	adc	r25, r25
     862:	1a f0       	brmi	.+6      	; 0x86a <__fixunssfsi+0x24>
     864:	ba 95       	dec	r27
     866:	c9 f7       	brne	.-14     	; 0x85a <__fixunssfsi+0x14>
     868:	14 c0       	rjmp	.+40     	; 0x892 <__fixunssfsi+0x4c>
     86a:	b1 30       	cpi	r27, 0x01	; 1
     86c:	91 f0       	breq	.+36     	; 0x892 <__fixunssfsi+0x4c>
     86e:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__fp_zero>
     872:	b1 e0       	ldi	r27, 0x01	; 1
     874:	08 95       	ret
     876:	0c 94 fd 04 	jmp	0x9fa	; 0x9fa <__fp_zero>
     87a:	67 2f       	mov	r22, r23
     87c:	78 2f       	mov	r23, r24
     87e:	88 27       	eor	r24, r24
     880:	b8 5f       	subi	r27, 0xF8	; 248
     882:	39 f0       	breq	.+14     	; 0x892 <__fixunssfsi+0x4c>
     884:	b9 3f       	cpi	r27, 0xF9	; 249
     886:	cc f3       	brlt	.-14     	; 0x87a <__fixunssfsi+0x34>
     888:	86 95       	lsr	r24
     88a:	77 95       	ror	r23
     88c:	67 95       	ror	r22
     88e:	b3 95       	inc	r27
     890:	d9 f7       	brne	.-10     	; 0x888 <__fixunssfsi+0x42>
     892:	3e f4       	brtc	.+14     	; 0x8a2 <__fixunssfsi+0x5c>
     894:	90 95       	com	r25
     896:	80 95       	com	r24
     898:	70 95       	com	r23
     89a:	61 95       	neg	r22
     89c:	7f 4f       	sbci	r23, 0xFF	; 255
     89e:	8f 4f       	sbci	r24, 0xFF	; 255
     8a0:	9f 4f       	sbci	r25, 0xFF	; 255
     8a2:	08 95       	ret

000008a4 <__floatunsisf>:
     8a4:	e8 94       	clt
     8a6:	09 c0       	rjmp	.+18     	; 0x8ba <__floatsisf+0x12>

000008a8 <__floatsisf>:
     8a8:	97 fb       	bst	r25, 7
     8aa:	3e f4       	brtc	.+14     	; 0x8ba <__floatsisf+0x12>
     8ac:	90 95       	com	r25
     8ae:	80 95       	com	r24
     8b0:	70 95       	com	r23
     8b2:	61 95       	neg	r22
     8b4:	7f 4f       	sbci	r23, 0xFF	; 255
     8b6:	8f 4f       	sbci	r24, 0xFF	; 255
     8b8:	9f 4f       	sbci	r25, 0xFF	; 255
     8ba:	99 23       	and	r25, r25
     8bc:	a9 f0       	breq	.+42     	; 0x8e8 <__floatsisf+0x40>
     8be:	f9 2f       	mov	r31, r25
     8c0:	96 e9       	ldi	r25, 0x96	; 150
     8c2:	bb 27       	eor	r27, r27
     8c4:	93 95       	inc	r25
     8c6:	f6 95       	lsr	r31
     8c8:	87 95       	ror	r24
     8ca:	77 95       	ror	r23
     8cc:	67 95       	ror	r22
     8ce:	b7 95       	ror	r27
     8d0:	f1 11       	cpse	r31, r1
     8d2:	f8 cf       	rjmp	.-16     	; 0x8c4 <__floatsisf+0x1c>
     8d4:	fa f4       	brpl	.+62     	; 0x914 <__stack+0x15>
     8d6:	bb 0f       	add	r27, r27
     8d8:	11 f4       	brne	.+4      	; 0x8de <__floatsisf+0x36>
     8da:	60 ff       	sbrs	r22, 0
     8dc:	1b c0       	rjmp	.+54     	; 0x914 <__stack+0x15>
     8de:	6f 5f       	subi	r22, 0xFF	; 255
     8e0:	7f 4f       	sbci	r23, 0xFF	; 255
     8e2:	8f 4f       	sbci	r24, 0xFF	; 255
     8e4:	9f 4f       	sbci	r25, 0xFF	; 255
     8e6:	16 c0       	rjmp	.+44     	; 0x914 <__stack+0x15>
     8e8:	88 23       	and	r24, r24
     8ea:	11 f0       	breq	.+4      	; 0x8f0 <__floatsisf+0x48>
     8ec:	96 e9       	ldi	r25, 0x96	; 150
     8ee:	11 c0       	rjmp	.+34     	; 0x912 <__stack+0x13>
     8f0:	77 23       	and	r23, r23
     8f2:	21 f0       	breq	.+8      	; 0x8fc <__floatsisf+0x54>
     8f4:	9e e8       	ldi	r25, 0x8E	; 142
     8f6:	87 2f       	mov	r24, r23
     8f8:	76 2f       	mov	r23, r22
     8fa:	05 c0       	rjmp	.+10     	; 0x906 <__stack+0x7>
     8fc:	66 23       	and	r22, r22
     8fe:	71 f0       	breq	.+28     	; 0x91c <__stack+0x1d>
     900:	96 e8       	ldi	r25, 0x86	; 134
     902:	86 2f       	mov	r24, r22
     904:	70 e0       	ldi	r23, 0x00	; 0
     906:	60 e0       	ldi	r22, 0x00	; 0
     908:	2a f0       	brmi	.+10     	; 0x914 <__stack+0x15>
     90a:	9a 95       	dec	r25
     90c:	66 0f       	add	r22, r22
     90e:	77 1f       	adc	r23, r23
     910:	88 1f       	adc	r24, r24
     912:	da f7       	brpl	.-10     	; 0x90a <__stack+0xb>
     914:	88 0f       	add	r24, r24
     916:	96 95       	lsr	r25
     918:	87 95       	ror	r24
     91a:	97 f9       	bld	r25, 7
     91c:	08 95       	ret

0000091e <__fp_cmp>:
     91e:	99 0f       	add	r25, r25
     920:	00 08       	sbc	r0, r0
     922:	55 0f       	add	r21, r21
     924:	aa 0b       	sbc	r26, r26
     926:	e0 e8       	ldi	r30, 0x80	; 128
     928:	fe ef       	ldi	r31, 0xFE	; 254
     92a:	16 16       	cp	r1, r22
     92c:	17 06       	cpc	r1, r23
     92e:	e8 07       	cpc	r30, r24
     930:	f9 07       	cpc	r31, r25
     932:	c0 f0       	brcs	.+48     	; 0x964 <__fp_cmp+0x46>
     934:	12 16       	cp	r1, r18
     936:	13 06       	cpc	r1, r19
     938:	e4 07       	cpc	r30, r20
     93a:	f5 07       	cpc	r31, r21
     93c:	98 f0       	brcs	.+38     	; 0x964 <__fp_cmp+0x46>
     93e:	62 1b       	sub	r22, r18
     940:	73 0b       	sbc	r23, r19
     942:	84 0b       	sbc	r24, r20
     944:	95 0b       	sbc	r25, r21
     946:	39 f4       	brne	.+14     	; 0x956 <__fp_cmp+0x38>
     948:	0a 26       	eor	r0, r26
     94a:	61 f0       	breq	.+24     	; 0x964 <__fp_cmp+0x46>
     94c:	23 2b       	or	r18, r19
     94e:	24 2b       	or	r18, r20
     950:	25 2b       	or	r18, r21
     952:	21 f4       	brne	.+8      	; 0x95c <__fp_cmp+0x3e>
     954:	08 95       	ret
     956:	0a 26       	eor	r0, r26
     958:	09 f4       	brne	.+2      	; 0x95c <__fp_cmp+0x3e>
     95a:	a1 40       	sbci	r26, 0x01	; 1
     95c:	a6 95       	lsr	r26
     95e:	8f ef       	ldi	r24, 0xFF	; 255
     960:	81 1d       	adc	r24, r1
     962:	81 1d       	adc	r24, r1
     964:	08 95       	ret

00000966 <__fp_inf>:
     966:	97 f9       	bld	r25, 7
     968:	9f 67       	ori	r25, 0x7F	; 127
     96a:	80 e8       	ldi	r24, 0x80	; 128
     96c:	70 e0       	ldi	r23, 0x00	; 0
     96e:	60 e0       	ldi	r22, 0x00	; 0
     970:	08 95       	ret

00000972 <__fp_nan>:
     972:	9f ef       	ldi	r25, 0xFF	; 255
     974:	80 ec       	ldi	r24, 0xC0	; 192
     976:	08 95       	ret

00000978 <__fp_pscA>:
     978:	00 24       	eor	r0, r0
     97a:	0a 94       	dec	r0
     97c:	16 16       	cp	r1, r22
     97e:	17 06       	cpc	r1, r23
     980:	18 06       	cpc	r1, r24
     982:	09 06       	cpc	r0, r25
     984:	08 95       	ret

00000986 <__fp_pscB>:
     986:	00 24       	eor	r0, r0
     988:	0a 94       	dec	r0
     98a:	12 16       	cp	r1, r18
     98c:	13 06       	cpc	r1, r19
     98e:	14 06       	cpc	r1, r20
     990:	05 06       	cpc	r0, r21
     992:	08 95       	ret

00000994 <__fp_round>:
     994:	09 2e       	mov	r0, r25
     996:	03 94       	inc	r0
     998:	00 0c       	add	r0, r0
     99a:	11 f4       	brne	.+4      	; 0x9a0 <__fp_round+0xc>
     99c:	88 23       	and	r24, r24
     99e:	52 f0       	brmi	.+20     	; 0x9b4 <__fp_round+0x20>
     9a0:	bb 0f       	add	r27, r27
     9a2:	40 f4       	brcc	.+16     	; 0x9b4 <__fp_round+0x20>
     9a4:	bf 2b       	or	r27, r31
     9a6:	11 f4       	brne	.+4      	; 0x9ac <__fp_round+0x18>
     9a8:	60 ff       	sbrs	r22, 0
     9aa:	04 c0       	rjmp	.+8      	; 0x9b4 <__fp_round+0x20>
     9ac:	6f 5f       	subi	r22, 0xFF	; 255
     9ae:	7f 4f       	sbci	r23, 0xFF	; 255
     9b0:	8f 4f       	sbci	r24, 0xFF	; 255
     9b2:	9f 4f       	sbci	r25, 0xFF	; 255
     9b4:	08 95       	ret

000009b6 <__fp_split3>:
     9b6:	57 fd       	sbrc	r21, 7
     9b8:	90 58       	subi	r25, 0x80	; 128
     9ba:	44 0f       	add	r20, r20
     9bc:	55 1f       	adc	r21, r21
     9be:	59 f0       	breq	.+22     	; 0x9d6 <__fp_splitA+0x10>
     9c0:	5f 3f       	cpi	r21, 0xFF	; 255
     9c2:	71 f0       	breq	.+28     	; 0x9e0 <__fp_splitA+0x1a>
     9c4:	47 95       	ror	r20

000009c6 <__fp_splitA>:
     9c6:	88 0f       	add	r24, r24
     9c8:	97 fb       	bst	r25, 7
     9ca:	99 1f       	adc	r25, r25
     9cc:	61 f0       	breq	.+24     	; 0x9e6 <__fp_splitA+0x20>
     9ce:	9f 3f       	cpi	r25, 0xFF	; 255
     9d0:	79 f0       	breq	.+30     	; 0x9f0 <__fp_splitA+0x2a>
     9d2:	87 95       	ror	r24
     9d4:	08 95       	ret
     9d6:	12 16       	cp	r1, r18
     9d8:	13 06       	cpc	r1, r19
     9da:	14 06       	cpc	r1, r20
     9dc:	55 1f       	adc	r21, r21
     9de:	f2 cf       	rjmp	.-28     	; 0x9c4 <__fp_split3+0xe>
     9e0:	46 95       	lsr	r20
     9e2:	f1 df       	rcall	.-30     	; 0x9c6 <__fp_splitA>
     9e4:	08 c0       	rjmp	.+16     	; 0x9f6 <__fp_splitA+0x30>
     9e6:	16 16       	cp	r1, r22
     9e8:	17 06       	cpc	r1, r23
     9ea:	18 06       	cpc	r1, r24
     9ec:	99 1f       	adc	r25, r25
     9ee:	f1 cf       	rjmp	.-30     	; 0x9d2 <__fp_splitA+0xc>
     9f0:	86 95       	lsr	r24
     9f2:	71 05       	cpc	r23, r1
     9f4:	61 05       	cpc	r22, r1
     9f6:	08 94       	sec
     9f8:	08 95       	ret

000009fa <__fp_zero>:
     9fa:	e8 94       	clt

000009fc <__fp_szero>:
     9fc:	bb 27       	eor	r27, r27
     9fe:	66 27       	eor	r22, r22
     a00:	77 27       	eor	r23, r23
     a02:	cb 01       	movw	r24, r22
     a04:	97 f9       	bld	r25, 7
     a06:	08 95       	ret

00000a08 <__gesf2>:
     a08:	0e 94 8f 04 	call	0x91e	; 0x91e <__fp_cmp>
     a0c:	08 f4       	brcc	.+2      	; 0xa10 <__gesf2+0x8>
     a0e:	8f ef       	ldi	r24, 0xFF	; 255
     a10:	08 95       	ret

00000a12 <__mulsf3>:
     a12:	0e 94 1c 05 	call	0xa38	; 0xa38 <__mulsf3x>
     a16:	0c 94 ca 04 	jmp	0x994	; 0x994 <__fp_round>
     a1a:	0e 94 bc 04 	call	0x978	; 0x978 <__fp_pscA>
     a1e:	38 f0       	brcs	.+14     	; 0xa2e <__mulsf3+0x1c>
     a20:	0e 94 c3 04 	call	0x986	; 0x986 <__fp_pscB>
     a24:	20 f0       	brcs	.+8      	; 0xa2e <__mulsf3+0x1c>
     a26:	95 23       	and	r25, r21
     a28:	11 f0       	breq	.+4      	; 0xa2e <__mulsf3+0x1c>
     a2a:	0c 94 b3 04 	jmp	0x966	; 0x966 <__fp_inf>
     a2e:	0c 94 b9 04 	jmp	0x972	; 0x972 <__fp_nan>
     a32:	11 24       	eor	r1, r1
     a34:	0c 94 fe 04 	jmp	0x9fc	; 0x9fc <__fp_szero>

00000a38 <__mulsf3x>:
     a38:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__fp_split3>
     a3c:	70 f3       	brcs	.-36     	; 0xa1a <__mulsf3+0x8>

00000a3e <__mulsf3_pse>:
     a3e:	95 9f       	mul	r25, r21
     a40:	c1 f3       	breq	.-16     	; 0xa32 <__mulsf3+0x20>
     a42:	95 0f       	add	r25, r21
     a44:	50 e0       	ldi	r21, 0x00	; 0
     a46:	55 1f       	adc	r21, r21
     a48:	62 9f       	mul	r22, r18
     a4a:	f0 01       	movw	r30, r0
     a4c:	72 9f       	mul	r23, r18
     a4e:	bb 27       	eor	r27, r27
     a50:	f0 0d       	add	r31, r0
     a52:	b1 1d       	adc	r27, r1
     a54:	63 9f       	mul	r22, r19
     a56:	aa 27       	eor	r26, r26
     a58:	f0 0d       	add	r31, r0
     a5a:	b1 1d       	adc	r27, r1
     a5c:	aa 1f       	adc	r26, r26
     a5e:	64 9f       	mul	r22, r20
     a60:	66 27       	eor	r22, r22
     a62:	b0 0d       	add	r27, r0
     a64:	a1 1d       	adc	r26, r1
     a66:	66 1f       	adc	r22, r22
     a68:	82 9f       	mul	r24, r18
     a6a:	22 27       	eor	r18, r18
     a6c:	b0 0d       	add	r27, r0
     a6e:	a1 1d       	adc	r26, r1
     a70:	62 1f       	adc	r22, r18
     a72:	73 9f       	mul	r23, r19
     a74:	b0 0d       	add	r27, r0
     a76:	a1 1d       	adc	r26, r1
     a78:	62 1f       	adc	r22, r18
     a7a:	83 9f       	mul	r24, r19
     a7c:	a0 0d       	add	r26, r0
     a7e:	61 1d       	adc	r22, r1
     a80:	22 1f       	adc	r18, r18
     a82:	74 9f       	mul	r23, r20
     a84:	33 27       	eor	r19, r19
     a86:	a0 0d       	add	r26, r0
     a88:	61 1d       	adc	r22, r1
     a8a:	23 1f       	adc	r18, r19
     a8c:	84 9f       	mul	r24, r20
     a8e:	60 0d       	add	r22, r0
     a90:	21 1d       	adc	r18, r1
     a92:	82 2f       	mov	r24, r18
     a94:	76 2f       	mov	r23, r22
     a96:	6a 2f       	mov	r22, r26
     a98:	11 24       	eor	r1, r1
     a9a:	9f 57       	subi	r25, 0x7F	; 127
     a9c:	50 40       	sbci	r21, 0x00	; 0
     a9e:	9a f0       	brmi	.+38     	; 0xac6 <__mulsf3_pse+0x88>
     aa0:	f1 f0       	breq	.+60     	; 0xade <__mulsf3_pse+0xa0>
     aa2:	88 23       	and	r24, r24
     aa4:	4a f0       	brmi	.+18     	; 0xab8 <__mulsf3_pse+0x7a>
     aa6:	ee 0f       	add	r30, r30
     aa8:	ff 1f       	adc	r31, r31
     aaa:	bb 1f       	adc	r27, r27
     aac:	66 1f       	adc	r22, r22
     aae:	77 1f       	adc	r23, r23
     ab0:	88 1f       	adc	r24, r24
     ab2:	91 50       	subi	r25, 0x01	; 1
     ab4:	50 40       	sbci	r21, 0x00	; 0
     ab6:	a9 f7       	brne	.-22     	; 0xaa2 <__mulsf3_pse+0x64>
     ab8:	9e 3f       	cpi	r25, 0xFE	; 254
     aba:	51 05       	cpc	r21, r1
     abc:	80 f0       	brcs	.+32     	; 0xade <__mulsf3_pse+0xa0>
     abe:	0c 94 b3 04 	jmp	0x966	; 0x966 <__fp_inf>
     ac2:	0c 94 fe 04 	jmp	0x9fc	; 0x9fc <__fp_szero>
     ac6:	5f 3f       	cpi	r21, 0xFF	; 255
     ac8:	e4 f3       	brlt	.-8      	; 0xac2 <__mulsf3_pse+0x84>
     aca:	98 3e       	cpi	r25, 0xE8	; 232
     acc:	d4 f3       	brlt	.-12     	; 0xac2 <__mulsf3_pse+0x84>
     ace:	86 95       	lsr	r24
     ad0:	77 95       	ror	r23
     ad2:	67 95       	ror	r22
     ad4:	b7 95       	ror	r27
     ad6:	f7 95       	ror	r31
     ad8:	e7 95       	ror	r30
     ada:	9f 5f       	subi	r25, 0xFF	; 255
     adc:	c1 f7       	brne	.-16     	; 0xace <__mulsf3_pse+0x90>
     ade:	fe 2b       	or	r31, r30
     ae0:	88 0f       	add	r24, r24
     ae2:	91 1d       	adc	r25, r1
     ae4:	96 95       	lsr	r25
     ae6:	87 95       	ror	r24
     ae8:	97 f9       	bld	r25, 7
     aea:	08 95       	ret

00000aec <dtostrf>:
     aec:	ef 92       	push	r14
     aee:	0f 93       	push	r16
     af0:	1f 93       	push	r17
     af2:	cf 93       	push	r28
     af4:	df 93       	push	r29
     af6:	e8 01       	movw	r28, r16
     af8:	47 fd       	sbrc	r20, 7
     afa:	02 c0       	rjmp	.+4      	; 0xb00 <dtostrf+0x14>
     afc:	34 e0       	ldi	r19, 0x04	; 4
     afe:	01 c0       	rjmp	.+2      	; 0xb02 <dtostrf+0x16>
     b00:	34 e1       	ldi	r19, 0x14	; 20
     b02:	04 2e       	mov	r0, r20
     b04:	00 0c       	add	r0, r0
     b06:	55 0b       	sbc	r21, r21
     b08:	57 ff       	sbrs	r21, 7
     b0a:	03 c0       	rjmp	.+6      	; 0xb12 <dtostrf+0x26>
     b0c:	51 95       	neg	r21
     b0e:	41 95       	neg	r20
     b10:	51 09       	sbc	r21, r1
     b12:	e3 2e       	mov	r14, r19
     b14:	02 2f       	mov	r16, r18
     b16:	24 2f       	mov	r18, r20
     b18:	ae 01       	movw	r20, r28
     b1a:	0e 94 96 05 	call	0xb2c	; 0xb2c <dtoa_prf>
     b1e:	ce 01       	movw	r24, r28
     b20:	df 91       	pop	r29
     b22:	cf 91       	pop	r28
     b24:	1f 91       	pop	r17
     b26:	0f 91       	pop	r16
     b28:	ef 90       	pop	r14
     b2a:	08 95       	ret

00000b2c <dtoa_prf>:
     b2c:	a9 e0       	ldi	r26, 0x09	; 9
     b2e:	b0 e0       	ldi	r27, 0x00	; 0
     b30:	ec e9       	ldi	r30, 0x9C	; 156
     b32:	f5 e0       	ldi	r31, 0x05	; 5
     b34:	0c 94 ce 07 	jmp	0xf9c	; 0xf9c <__prologue_saves__+0xc>
     b38:	6a 01       	movw	r12, r20
     b3a:	12 2f       	mov	r17, r18
     b3c:	b0 2e       	mov	r11, r16
     b3e:	2b e3       	ldi	r18, 0x3B	; 59
     b40:	20 17       	cp	r18, r16
     b42:	20 f0       	brcs	.+8      	; 0xb4c <dtoa_prf+0x20>
     b44:	ff 24       	eor	r15, r15
     b46:	f3 94       	inc	r15
     b48:	f0 0e       	add	r15, r16
     b4a:	02 c0       	rjmp	.+4      	; 0xb50 <dtoa_prf+0x24>
     b4c:	2c e3       	ldi	r18, 0x3C	; 60
     b4e:	f2 2e       	mov	r15, r18
     b50:	0f 2d       	mov	r16, r15
     b52:	27 e0       	ldi	r18, 0x07	; 7
     b54:	ae 01       	movw	r20, r28
     b56:	4f 5f       	subi	r20, 0xFF	; 255
     b58:	5f 4f       	sbci	r21, 0xFF	; 255
     b5a:	0e 94 f0 06 	call	0xde0	; 0xde0 <__ftoa_engine>
     b5e:	bc 01       	movw	r22, r24
     b60:	49 81       	ldd	r20, Y+1	; 0x01
     b62:	84 2f       	mov	r24, r20
     b64:	89 70       	andi	r24, 0x09	; 9
     b66:	81 30       	cpi	r24, 0x01	; 1
     b68:	31 f0       	breq	.+12     	; 0xb76 <dtoa_prf+0x4a>
     b6a:	e1 fc       	sbrc	r14, 1
     b6c:	06 c0       	rjmp	.+12     	; 0xb7a <dtoa_prf+0x4e>
     b6e:	e0 fe       	sbrs	r14, 0
     b70:	06 c0       	rjmp	.+12     	; 0xb7e <dtoa_prf+0x52>
     b72:	90 e2       	ldi	r25, 0x20	; 32
     b74:	05 c0       	rjmp	.+10     	; 0xb80 <dtoa_prf+0x54>
     b76:	9d e2       	ldi	r25, 0x2D	; 45
     b78:	03 c0       	rjmp	.+6      	; 0xb80 <dtoa_prf+0x54>
     b7a:	9b e2       	ldi	r25, 0x2B	; 43
     b7c:	01 c0       	rjmp	.+2      	; 0xb80 <dtoa_prf+0x54>
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	5e 2d       	mov	r21, r14
     b82:	50 71       	andi	r21, 0x10	; 16
     b84:	43 ff       	sbrs	r20, 3
     b86:	3c c0       	rjmp	.+120    	; 0xc00 <dtoa_prf+0xd4>
     b88:	91 11       	cpse	r25, r1
     b8a:	02 c0       	rjmp	.+4      	; 0xb90 <dtoa_prf+0x64>
     b8c:	83 e0       	ldi	r24, 0x03	; 3
     b8e:	01 c0       	rjmp	.+2      	; 0xb92 <dtoa_prf+0x66>
     b90:	84 e0       	ldi	r24, 0x04	; 4
     b92:	81 17       	cp	r24, r17
     b94:	18 f4       	brcc	.+6      	; 0xb9c <dtoa_prf+0x70>
     b96:	21 2f       	mov	r18, r17
     b98:	28 1b       	sub	r18, r24
     b9a:	01 c0       	rjmp	.+2      	; 0xb9e <dtoa_prf+0x72>
     b9c:	20 e0       	ldi	r18, 0x00	; 0
     b9e:	51 11       	cpse	r21, r1
     ba0:	0b c0       	rjmp	.+22     	; 0xbb8 <dtoa_prf+0x8c>
     ba2:	f6 01       	movw	r30, r12
     ba4:	82 2f       	mov	r24, r18
     ba6:	30 e2       	ldi	r19, 0x20	; 32
     ba8:	88 23       	and	r24, r24
     baa:	19 f0       	breq	.+6      	; 0xbb2 <dtoa_prf+0x86>
     bac:	31 93       	st	Z+, r19
     bae:	81 50       	subi	r24, 0x01	; 1
     bb0:	fb cf       	rjmp	.-10     	; 0xba8 <dtoa_prf+0x7c>
     bb2:	c2 0e       	add	r12, r18
     bb4:	d1 1c       	adc	r13, r1
     bb6:	20 e0       	ldi	r18, 0x00	; 0
     bb8:	99 23       	and	r25, r25
     bba:	29 f0       	breq	.+10     	; 0xbc6 <dtoa_prf+0x9a>
     bbc:	d6 01       	movw	r26, r12
     bbe:	9c 93       	st	X, r25
     bc0:	f6 01       	movw	r30, r12
     bc2:	31 96       	adiw	r30, 0x01	; 1
     bc4:	6f 01       	movw	r12, r30
     bc6:	c6 01       	movw	r24, r12
     bc8:	03 96       	adiw	r24, 0x03	; 3
     bca:	e2 fe       	sbrs	r14, 2
     bcc:	0a c0       	rjmp	.+20     	; 0xbe2 <dtoa_prf+0xb6>
     bce:	3e e4       	ldi	r19, 0x4E	; 78
     bd0:	d6 01       	movw	r26, r12
     bd2:	3c 93       	st	X, r19
     bd4:	41 e4       	ldi	r20, 0x41	; 65
     bd6:	11 96       	adiw	r26, 0x01	; 1
     bd8:	4c 93       	st	X, r20
     bda:	11 97       	sbiw	r26, 0x01	; 1
     bdc:	12 96       	adiw	r26, 0x02	; 2
     bde:	3c 93       	st	X, r19
     be0:	06 c0       	rjmp	.+12     	; 0xbee <dtoa_prf+0xc2>
     be2:	3e e6       	ldi	r19, 0x6E	; 110
     be4:	f6 01       	movw	r30, r12
     be6:	30 83       	st	Z, r19
     be8:	41 e6       	ldi	r20, 0x61	; 97
     bea:	41 83       	std	Z+1, r20	; 0x01
     bec:	32 83       	std	Z+2, r19	; 0x02
     bee:	fc 01       	movw	r30, r24
     bf0:	32 2f       	mov	r19, r18
     bf2:	40 e2       	ldi	r20, 0x20	; 32
     bf4:	33 23       	and	r19, r19
     bf6:	09 f4       	brne	.+2      	; 0xbfa <dtoa_prf+0xce>
     bf8:	42 c0       	rjmp	.+132    	; 0xc7e <dtoa_prf+0x152>
     bfa:	41 93       	st	Z+, r20
     bfc:	31 50       	subi	r19, 0x01	; 1
     bfe:	fa cf       	rjmp	.-12     	; 0xbf4 <dtoa_prf+0xc8>
     c00:	42 ff       	sbrs	r20, 2
     c02:	44 c0       	rjmp	.+136    	; 0xc8c <dtoa_prf+0x160>
     c04:	91 11       	cpse	r25, r1
     c06:	02 c0       	rjmp	.+4      	; 0xc0c <dtoa_prf+0xe0>
     c08:	83 e0       	ldi	r24, 0x03	; 3
     c0a:	01 c0       	rjmp	.+2      	; 0xc0e <dtoa_prf+0xe2>
     c0c:	84 e0       	ldi	r24, 0x04	; 4
     c0e:	81 17       	cp	r24, r17
     c10:	18 f4       	brcc	.+6      	; 0xc18 <dtoa_prf+0xec>
     c12:	21 2f       	mov	r18, r17
     c14:	28 1b       	sub	r18, r24
     c16:	01 c0       	rjmp	.+2      	; 0xc1a <dtoa_prf+0xee>
     c18:	20 e0       	ldi	r18, 0x00	; 0
     c1a:	51 11       	cpse	r21, r1
     c1c:	0b c0       	rjmp	.+22     	; 0xc34 <dtoa_prf+0x108>
     c1e:	f6 01       	movw	r30, r12
     c20:	82 2f       	mov	r24, r18
     c22:	30 e2       	ldi	r19, 0x20	; 32
     c24:	88 23       	and	r24, r24
     c26:	19 f0       	breq	.+6      	; 0xc2e <dtoa_prf+0x102>
     c28:	31 93       	st	Z+, r19
     c2a:	81 50       	subi	r24, 0x01	; 1
     c2c:	fb cf       	rjmp	.-10     	; 0xc24 <dtoa_prf+0xf8>
     c2e:	c2 0e       	add	r12, r18
     c30:	d1 1c       	adc	r13, r1
     c32:	20 e0       	ldi	r18, 0x00	; 0
     c34:	99 23       	and	r25, r25
     c36:	29 f0       	breq	.+10     	; 0xc42 <dtoa_prf+0x116>
     c38:	d6 01       	movw	r26, r12
     c3a:	9c 93       	st	X, r25
     c3c:	f6 01       	movw	r30, r12
     c3e:	31 96       	adiw	r30, 0x01	; 1
     c40:	6f 01       	movw	r12, r30
     c42:	c6 01       	movw	r24, r12
     c44:	03 96       	adiw	r24, 0x03	; 3
     c46:	e2 fe       	sbrs	r14, 2
     c48:	0b c0       	rjmp	.+22     	; 0xc60 <dtoa_prf+0x134>
     c4a:	39 e4       	ldi	r19, 0x49	; 73
     c4c:	d6 01       	movw	r26, r12
     c4e:	3c 93       	st	X, r19
     c50:	3e e4       	ldi	r19, 0x4E	; 78
     c52:	11 96       	adiw	r26, 0x01	; 1
     c54:	3c 93       	st	X, r19
     c56:	11 97       	sbiw	r26, 0x01	; 1
     c58:	36 e4       	ldi	r19, 0x46	; 70
     c5a:	12 96       	adiw	r26, 0x02	; 2
     c5c:	3c 93       	st	X, r19
     c5e:	07 c0       	rjmp	.+14     	; 0xc6e <dtoa_prf+0x142>
     c60:	39 e6       	ldi	r19, 0x69	; 105
     c62:	f6 01       	movw	r30, r12
     c64:	30 83       	st	Z, r19
     c66:	3e e6       	ldi	r19, 0x6E	; 110
     c68:	31 83       	std	Z+1, r19	; 0x01
     c6a:	36 e6       	ldi	r19, 0x66	; 102
     c6c:	32 83       	std	Z+2, r19	; 0x02
     c6e:	fc 01       	movw	r30, r24
     c70:	32 2f       	mov	r19, r18
     c72:	40 e2       	ldi	r20, 0x20	; 32
     c74:	33 23       	and	r19, r19
     c76:	19 f0       	breq	.+6      	; 0xc7e <dtoa_prf+0x152>
     c78:	41 93       	st	Z+, r20
     c7a:	31 50       	subi	r19, 0x01	; 1
     c7c:	fb cf       	rjmp	.-10     	; 0xc74 <dtoa_prf+0x148>
     c7e:	fc 01       	movw	r30, r24
     c80:	e2 0f       	add	r30, r18
     c82:	f1 1d       	adc	r31, r1
     c84:	10 82       	st	Z, r1
     c86:	8e ef       	ldi	r24, 0xFE	; 254
     c88:	9f ef       	ldi	r25, 0xFF	; 255
     c8a:	a6 c0       	rjmp	.+332    	; 0xdd8 <dtoa_prf+0x2ac>
     c8c:	21 e0       	ldi	r18, 0x01	; 1
     c8e:	30 e0       	ldi	r19, 0x00	; 0
     c90:	91 11       	cpse	r25, r1
     c92:	02 c0       	rjmp	.+4      	; 0xc98 <dtoa_prf+0x16c>
     c94:	20 e0       	ldi	r18, 0x00	; 0
     c96:	30 e0       	ldi	r19, 0x00	; 0
     c98:	16 16       	cp	r1, r22
     c9a:	17 06       	cpc	r1, r23
     c9c:	1c f4       	brge	.+6      	; 0xca4 <dtoa_prf+0x178>
     c9e:	fb 01       	movw	r30, r22
     ca0:	31 96       	adiw	r30, 0x01	; 1
     ca2:	02 c0       	rjmp	.+4      	; 0xca8 <dtoa_prf+0x17c>
     ca4:	e1 e0       	ldi	r30, 0x01	; 1
     ca6:	f0 e0       	ldi	r31, 0x00	; 0
     ca8:	2e 0f       	add	r18, r30
     caa:	3f 1f       	adc	r19, r31
     cac:	bb 20       	and	r11, r11
     cae:	21 f0       	breq	.+8      	; 0xcb8 <dtoa_prf+0x18c>
     cb0:	eb 2d       	mov	r30, r11
     cb2:	f0 e0       	ldi	r31, 0x00	; 0
     cb4:	31 96       	adiw	r30, 0x01	; 1
     cb6:	02 c0       	rjmp	.+4      	; 0xcbc <dtoa_prf+0x190>
     cb8:	e0 e0       	ldi	r30, 0x00	; 0
     cba:	f0 e0       	ldi	r31, 0x00	; 0
     cbc:	2e 0f       	add	r18, r30
     cbe:	3f 1f       	adc	r19, r31
     cc0:	e1 2f       	mov	r30, r17
     cc2:	f0 e0       	ldi	r31, 0x00	; 0
     cc4:	2e 17       	cp	r18, r30
     cc6:	3f 07       	cpc	r19, r31
     cc8:	1c f4       	brge	.+6      	; 0xcd0 <dtoa_prf+0x1a4>
     cca:	12 1b       	sub	r17, r18
     ccc:	21 2f       	mov	r18, r17
     cce:	01 c0       	rjmp	.+2      	; 0xcd2 <dtoa_prf+0x1a6>
     cd0:	20 e0       	ldi	r18, 0x00	; 0
     cd2:	8e 2d       	mov	r24, r14
     cd4:	88 71       	andi	r24, 0x18	; 24
     cd6:	59 f4       	brne	.+22     	; 0xcee <dtoa_prf+0x1c2>
     cd8:	f6 01       	movw	r30, r12
     cda:	82 2f       	mov	r24, r18
     cdc:	30 e2       	ldi	r19, 0x20	; 32
     cde:	88 23       	and	r24, r24
     ce0:	19 f0       	breq	.+6      	; 0xce8 <dtoa_prf+0x1bc>
     ce2:	31 93       	st	Z+, r19
     ce4:	81 50       	subi	r24, 0x01	; 1
     ce6:	fb cf       	rjmp	.-10     	; 0xcde <dtoa_prf+0x1b2>
     ce8:	c2 0e       	add	r12, r18
     cea:	d1 1c       	adc	r13, r1
     cec:	20 e0       	ldi	r18, 0x00	; 0
     cee:	99 23       	and	r25, r25
     cf0:	29 f0       	breq	.+10     	; 0xcfc <dtoa_prf+0x1d0>
     cf2:	d6 01       	movw	r26, r12
     cf4:	9c 93       	st	X, r25
     cf6:	f6 01       	movw	r30, r12
     cf8:	31 96       	adiw	r30, 0x01	; 1
     cfa:	6f 01       	movw	r12, r30
     cfc:	51 11       	cpse	r21, r1
     cfe:	0b c0       	rjmp	.+22     	; 0xd16 <dtoa_prf+0x1ea>
     d00:	f6 01       	movw	r30, r12
     d02:	82 2f       	mov	r24, r18
     d04:	90 e3       	ldi	r25, 0x30	; 48
     d06:	88 23       	and	r24, r24
     d08:	19 f0       	breq	.+6      	; 0xd10 <dtoa_prf+0x1e4>
     d0a:	91 93       	st	Z+, r25
     d0c:	81 50       	subi	r24, 0x01	; 1
     d0e:	fb cf       	rjmp	.-10     	; 0xd06 <dtoa_prf+0x1da>
     d10:	c2 0e       	add	r12, r18
     d12:	d1 1c       	adc	r13, r1
     d14:	20 e0       	ldi	r18, 0x00	; 0
     d16:	0f 2d       	mov	r16, r15
     d18:	06 0f       	add	r16, r22
     d1a:	9a 81       	ldd	r25, Y+2	; 0x02
     d1c:	34 2f       	mov	r19, r20
     d1e:	30 71       	andi	r19, 0x10	; 16
     d20:	44 ff       	sbrs	r20, 4
     d22:	03 c0       	rjmp	.+6      	; 0xd2a <dtoa_prf+0x1fe>
     d24:	91 33       	cpi	r25, 0x31	; 49
     d26:	09 f4       	brne	.+2      	; 0xd2a <dtoa_prf+0x1fe>
     d28:	01 50       	subi	r16, 0x01	; 1
     d2a:	10 16       	cp	r1, r16
     d2c:	24 f4       	brge	.+8      	; 0xd36 <dtoa_prf+0x20a>
     d2e:	09 30       	cpi	r16, 0x09	; 9
     d30:	18 f0       	brcs	.+6      	; 0xd38 <dtoa_prf+0x20c>
     d32:	08 e0       	ldi	r16, 0x08	; 8
     d34:	01 c0       	rjmp	.+2      	; 0xd38 <dtoa_prf+0x20c>
     d36:	01 e0       	ldi	r16, 0x01	; 1
     d38:	ab 01       	movw	r20, r22
     d3a:	77 ff       	sbrs	r23, 7
     d3c:	02 c0       	rjmp	.+4      	; 0xd42 <dtoa_prf+0x216>
     d3e:	40 e0       	ldi	r20, 0x00	; 0
     d40:	50 e0       	ldi	r21, 0x00	; 0
     d42:	fb 01       	movw	r30, r22
     d44:	e4 1b       	sub	r30, r20
     d46:	f5 0b       	sbc	r31, r21
     d48:	a1 e0       	ldi	r26, 0x01	; 1
     d4a:	b0 e0       	ldi	r27, 0x00	; 0
     d4c:	ac 0f       	add	r26, r28
     d4e:	bd 1f       	adc	r27, r29
     d50:	ea 0f       	add	r30, r26
     d52:	fb 1f       	adc	r31, r27
     d54:	8e e2       	ldi	r24, 0x2E	; 46
     d56:	a8 2e       	mov	r10, r24
     d58:	4b 01       	movw	r8, r22
     d5a:	80 1a       	sub	r8, r16
     d5c:	91 08       	sbc	r9, r1
     d5e:	0b 2d       	mov	r16, r11
     d60:	10 e0       	ldi	r17, 0x00	; 0
     d62:	11 95       	neg	r17
     d64:	01 95       	neg	r16
     d66:	11 09       	sbc	r17, r1
     d68:	4f 3f       	cpi	r20, 0xFF	; 255
     d6a:	bf ef       	ldi	r27, 0xFF	; 255
     d6c:	5b 07       	cpc	r21, r27
     d6e:	21 f4       	brne	.+8      	; 0xd78 <dtoa_prf+0x24c>
     d70:	d6 01       	movw	r26, r12
     d72:	ac 92       	st	X, r10
     d74:	11 96       	adiw	r26, 0x01	; 1
     d76:	6d 01       	movw	r12, r26
     d78:	64 17       	cp	r22, r20
     d7a:	75 07       	cpc	r23, r21
     d7c:	2c f0       	brlt	.+10     	; 0xd88 <dtoa_prf+0x25c>
     d7e:	84 16       	cp	r8, r20
     d80:	95 06       	cpc	r9, r21
     d82:	14 f4       	brge	.+4      	; 0xd88 <dtoa_prf+0x25c>
     d84:	81 81       	ldd	r24, Z+1	; 0x01
     d86:	01 c0       	rjmp	.+2      	; 0xd8a <dtoa_prf+0x25e>
     d88:	80 e3       	ldi	r24, 0x30	; 48
     d8a:	41 50       	subi	r20, 0x01	; 1
     d8c:	51 09       	sbc	r21, r1
     d8e:	31 96       	adiw	r30, 0x01	; 1
     d90:	d6 01       	movw	r26, r12
     d92:	11 96       	adiw	r26, 0x01	; 1
     d94:	7d 01       	movw	r14, r26
     d96:	40 17       	cp	r20, r16
     d98:	51 07       	cpc	r21, r17
     d9a:	24 f0       	brlt	.+8      	; 0xda4 <dtoa_prf+0x278>
     d9c:	d6 01       	movw	r26, r12
     d9e:	8c 93       	st	X, r24
     da0:	67 01       	movw	r12, r14
     da2:	e2 cf       	rjmp	.-60     	; 0xd68 <dtoa_prf+0x23c>
     da4:	64 17       	cp	r22, r20
     da6:	75 07       	cpc	r23, r21
     da8:	39 f4       	brne	.+14     	; 0xdb8 <dtoa_prf+0x28c>
     daa:	96 33       	cpi	r25, 0x36	; 54
     dac:	20 f4       	brcc	.+8      	; 0xdb6 <dtoa_prf+0x28a>
     dae:	95 33       	cpi	r25, 0x35	; 53
     db0:	19 f4       	brne	.+6      	; 0xdb8 <dtoa_prf+0x28c>
     db2:	31 11       	cpse	r19, r1
     db4:	01 c0       	rjmp	.+2      	; 0xdb8 <dtoa_prf+0x28c>
     db6:	81 e3       	ldi	r24, 0x31	; 49
     db8:	f6 01       	movw	r30, r12
     dba:	80 83       	st	Z, r24
     dbc:	f7 01       	movw	r30, r14
     dbe:	82 2f       	mov	r24, r18
     dc0:	90 e2       	ldi	r25, 0x20	; 32
     dc2:	88 23       	and	r24, r24
     dc4:	19 f0       	breq	.+6      	; 0xdcc <dtoa_prf+0x2a0>
     dc6:	91 93       	st	Z+, r25
     dc8:	81 50       	subi	r24, 0x01	; 1
     dca:	fb cf       	rjmp	.-10     	; 0xdc2 <dtoa_prf+0x296>
     dcc:	f7 01       	movw	r30, r14
     dce:	e2 0f       	add	r30, r18
     dd0:	f1 1d       	adc	r31, r1
     dd2:	10 82       	st	Z, r1
     dd4:	80 e0       	ldi	r24, 0x00	; 0
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	29 96       	adiw	r28, 0x09	; 9
     dda:	ec e0       	ldi	r30, 0x0C	; 12
     ddc:	0c 94 ea 07 	jmp	0xfd4	; 0xfd4 <__epilogue_restores__+0xc>

00000de0 <__ftoa_engine>:
     de0:	28 30       	cpi	r18, 0x08	; 8
     de2:	08 f0       	brcs	.+2      	; 0xde6 <__ftoa_engine+0x6>
     de4:	27 e0       	ldi	r18, 0x07	; 7
     de6:	33 27       	eor	r19, r19
     de8:	da 01       	movw	r26, r20
     dea:	99 0f       	add	r25, r25
     dec:	31 1d       	adc	r19, r1
     dee:	87 fd       	sbrc	r24, 7
     df0:	91 60       	ori	r25, 0x01	; 1
     df2:	00 96       	adiw	r24, 0x00	; 0
     df4:	61 05       	cpc	r22, r1
     df6:	71 05       	cpc	r23, r1
     df8:	39 f4       	brne	.+14     	; 0xe08 <__ftoa_engine+0x28>
     dfa:	32 60       	ori	r19, 0x02	; 2
     dfc:	2e 5f       	subi	r18, 0xFE	; 254
     dfe:	3d 93       	st	X+, r19
     e00:	30 e3       	ldi	r19, 0x30	; 48
     e02:	2a 95       	dec	r18
     e04:	e1 f7       	brne	.-8      	; 0xdfe <__ftoa_engine+0x1e>
     e06:	08 95       	ret
     e08:	9f 3f       	cpi	r25, 0xFF	; 255
     e0a:	30 f0       	brcs	.+12     	; 0xe18 <__ftoa_engine+0x38>
     e0c:	80 38       	cpi	r24, 0x80	; 128
     e0e:	71 05       	cpc	r23, r1
     e10:	61 05       	cpc	r22, r1
     e12:	09 f0       	breq	.+2      	; 0xe16 <__ftoa_engine+0x36>
     e14:	3c 5f       	subi	r19, 0xFC	; 252
     e16:	3c 5f       	subi	r19, 0xFC	; 252
     e18:	3d 93       	st	X+, r19
     e1a:	91 30       	cpi	r25, 0x01	; 1
     e1c:	08 f0       	brcs	.+2      	; 0xe20 <__ftoa_engine+0x40>
     e1e:	80 68       	ori	r24, 0x80	; 128
     e20:	91 1d       	adc	r25, r1
     e22:	df 93       	push	r29
     e24:	cf 93       	push	r28
     e26:	1f 93       	push	r17
     e28:	0f 93       	push	r16
     e2a:	ff 92       	push	r15
     e2c:	ef 92       	push	r14
     e2e:	19 2f       	mov	r17, r25
     e30:	98 7f       	andi	r25, 0xF8	; 248
     e32:	96 95       	lsr	r25
     e34:	e9 2f       	mov	r30, r25
     e36:	96 95       	lsr	r25
     e38:	96 95       	lsr	r25
     e3a:	e9 0f       	add	r30, r25
     e3c:	ff 27       	eor	r31, r31
     e3e:	e2 5f       	subi	r30, 0xF2	; 242
     e40:	fe 4f       	sbci	r31, 0xFE	; 254
     e42:	99 27       	eor	r25, r25
     e44:	33 27       	eor	r19, r19
     e46:	ee 24       	eor	r14, r14
     e48:	ff 24       	eor	r15, r15
     e4a:	a7 01       	movw	r20, r14
     e4c:	e7 01       	movw	r28, r14
     e4e:	05 90       	lpm	r0, Z+
     e50:	08 94       	sec
     e52:	07 94       	ror	r0
     e54:	28 f4       	brcc	.+10     	; 0xe60 <__ftoa_engine+0x80>
     e56:	36 0f       	add	r19, r22
     e58:	e7 1e       	adc	r14, r23
     e5a:	f8 1e       	adc	r15, r24
     e5c:	49 1f       	adc	r20, r25
     e5e:	51 1d       	adc	r21, r1
     e60:	66 0f       	add	r22, r22
     e62:	77 1f       	adc	r23, r23
     e64:	88 1f       	adc	r24, r24
     e66:	99 1f       	adc	r25, r25
     e68:	06 94       	lsr	r0
     e6a:	a1 f7       	brne	.-24     	; 0xe54 <__ftoa_engine+0x74>
     e6c:	05 90       	lpm	r0, Z+
     e6e:	07 94       	ror	r0
     e70:	28 f4       	brcc	.+10     	; 0xe7c <__ftoa_engine+0x9c>
     e72:	e7 0e       	add	r14, r23
     e74:	f8 1e       	adc	r15, r24
     e76:	49 1f       	adc	r20, r25
     e78:	56 1f       	adc	r21, r22
     e7a:	c1 1d       	adc	r28, r1
     e7c:	77 0f       	add	r23, r23
     e7e:	88 1f       	adc	r24, r24
     e80:	99 1f       	adc	r25, r25
     e82:	66 1f       	adc	r22, r22
     e84:	06 94       	lsr	r0
     e86:	a1 f7       	brne	.-24     	; 0xe70 <__ftoa_engine+0x90>
     e88:	05 90       	lpm	r0, Z+
     e8a:	07 94       	ror	r0
     e8c:	28 f4       	brcc	.+10     	; 0xe98 <__ftoa_engine+0xb8>
     e8e:	f8 0e       	add	r15, r24
     e90:	49 1f       	adc	r20, r25
     e92:	56 1f       	adc	r21, r22
     e94:	c7 1f       	adc	r28, r23
     e96:	d1 1d       	adc	r29, r1
     e98:	88 0f       	add	r24, r24
     e9a:	99 1f       	adc	r25, r25
     e9c:	66 1f       	adc	r22, r22
     e9e:	77 1f       	adc	r23, r23
     ea0:	06 94       	lsr	r0
     ea2:	a1 f7       	brne	.-24     	; 0xe8c <__ftoa_engine+0xac>
     ea4:	05 90       	lpm	r0, Z+
     ea6:	07 94       	ror	r0
     ea8:	20 f4       	brcc	.+8      	; 0xeb2 <__ftoa_engine+0xd2>
     eaa:	49 0f       	add	r20, r25
     eac:	56 1f       	adc	r21, r22
     eae:	c7 1f       	adc	r28, r23
     eb0:	d8 1f       	adc	r29, r24
     eb2:	99 0f       	add	r25, r25
     eb4:	66 1f       	adc	r22, r22
     eb6:	77 1f       	adc	r23, r23
     eb8:	88 1f       	adc	r24, r24
     eba:	06 94       	lsr	r0
     ebc:	a9 f7       	brne	.-22     	; 0xea8 <__ftoa_engine+0xc8>
     ebe:	84 91       	lpm	r24, Z
     ec0:	10 95       	com	r17
     ec2:	17 70       	andi	r17, 0x07	; 7
     ec4:	41 f0       	breq	.+16     	; 0xed6 <__ftoa_engine+0xf6>
     ec6:	d6 95       	lsr	r29
     ec8:	c7 95       	ror	r28
     eca:	57 95       	ror	r21
     ecc:	47 95       	ror	r20
     ece:	f7 94       	ror	r15
     ed0:	e7 94       	ror	r14
     ed2:	1a 95       	dec	r17
     ed4:	c1 f7       	brne	.-16     	; 0xec6 <__ftoa_engine+0xe6>
     ed6:	e4 eb       	ldi	r30, 0xB4	; 180
     ed8:	f0 e0       	ldi	r31, 0x00	; 0
     eda:	68 94       	set
     edc:	15 90       	lpm	r1, Z+
     ede:	15 91       	lpm	r17, Z+
     ee0:	35 91       	lpm	r19, Z+
     ee2:	65 91       	lpm	r22, Z+
     ee4:	95 91       	lpm	r25, Z+
     ee6:	05 90       	lpm	r0, Z+
     ee8:	7f e2       	ldi	r23, 0x2F	; 47
     eea:	73 95       	inc	r23
     eec:	e1 18       	sub	r14, r1
     eee:	f1 0a       	sbc	r15, r17
     ef0:	43 0b       	sbc	r20, r19
     ef2:	56 0b       	sbc	r21, r22
     ef4:	c9 0b       	sbc	r28, r25
     ef6:	d0 09       	sbc	r29, r0
     ef8:	c0 f7       	brcc	.-16     	; 0xeea <__ftoa_engine+0x10a>
     efa:	e1 0c       	add	r14, r1
     efc:	f1 1e       	adc	r15, r17
     efe:	43 1f       	adc	r20, r19
     f00:	56 1f       	adc	r21, r22
     f02:	c9 1f       	adc	r28, r25
     f04:	d0 1d       	adc	r29, r0
     f06:	7e f4       	brtc	.+30     	; 0xf26 <__ftoa_engine+0x146>
     f08:	70 33       	cpi	r23, 0x30	; 48
     f0a:	11 f4       	brne	.+4      	; 0xf10 <__ftoa_engine+0x130>
     f0c:	8a 95       	dec	r24
     f0e:	e6 cf       	rjmp	.-52     	; 0xedc <__ftoa_engine+0xfc>
     f10:	e8 94       	clt
     f12:	01 50       	subi	r16, 0x01	; 1
     f14:	30 f0       	brcs	.+12     	; 0xf22 <__ftoa_engine+0x142>
     f16:	08 0f       	add	r16, r24
     f18:	0a f4       	brpl	.+2      	; 0xf1c <__ftoa_engine+0x13c>
     f1a:	00 27       	eor	r16, r16
     f1c:	02 17       	cp	r16, r18
     f1e:	08 f4       	brcc	.+2      	; 0xf22 <__ftoa_engine+0x142>
     f20:	20 2f       	mov	r18, r16
     f22:	23 95       	inc	r18
     f24:	02 2f       	mov	r16, r18
     f26:	7a 33       	cpi	r23, 0x3A	; 58
     f28:	28 f0       	brcs	.+10     	; 0xf34 <__ftoa_engine+0x154>
     f2a:	79 e3       	ldi	r23, 0x39	; 57
     f2c:	7d 93       	st	X+, r23
     f2e:	2a 95       	dec	r18
     f30:	e9 f7       	brne	.-6      	; 0xf2c <__ftoa_engine+0x14c>
     f32:	10 c0       	rjmp	.+32     	; 0xf54 <__ftoa_engine+0x174>
     f34:	7d 93       	st	X+, r23
     f36:	2a 95       	dec	r18
     f38:	89 f6       	brne	.-94     	; 0xedc <__ftoa_engine+0xfc>
     f3a:	06 94       	lsr	r0
     f3c:	97 95       	ror	r25
     f3e:	67 95       	ror	r22
     f40:	37 95       	ror	r19
     f42:	17 95       	ror	r17
     f44:	17 94       	ror	r1
     f46:	e1 18       	sub	r14, r1
     f48:	f1 0a       	sbc	r15, r17
     f4a:	43 0b       	sbc	r20, r19
     f4c:	56 0b       	sbc	r21, r22
     f4e:	c9 0b       	sbc	r28, r25
     f50:	d0 09       	sbc	r29, r0
     f52:	98 f0       	brcs	.+38     	; 0xf7a <__ftoa_engine+0x19a>
     f54:	23 95       	inc	r18
     f56:	7e 91       	ld	r23, -X
     f58:	73 95       	inc	r23
     f5a:	7a 33       	cpi	r23, 0x3A	; 58
     f5c:	08 f0       	brcs	.+2      	; 0xf60 <__ftoa_engine+0x180>
     f5e:	70 e3       	ldi	r23, 0x30	; 48
     f60:	7c 93       	st	X, r23
     f62:	20 13       	cpse	r18, r16
     f64:	b8 f7       	brcc	.-18     	; 0xf54 <__ftoa_engine+0x174>
     f66:	7e 91       	ld	r23, -X
     f68:	70 61       	ori	r23, 0x10	; 16
     f6a:	7d 93       	st	X+, r23
     f6c:	30 f0       	brcs	.+12     	; 0xf7a <__ftoa_engine+0x19a>
     f6e:	83 95       	inc	r24
     f70:	71 e3       	ldi	r23, 0x31	; 49
     f72:	7d 93       	st	X+, r23
     f74:	70 e3       	ldi	r23, 0x30	; 48
     f76:	2a 95       	dec	r18
     f78:	e1 f7       	brne	.-8      	; 0xf72 <__ftoa_engine+0x192>
     f7a:	11 24       	eor	r1, r1
     f7c:	ef 90       	pop	r14
     f7e:	ff 90       	pop	r15
     f80:	0f 91       	pop	r16
     f82:	1f 91       	pop	r17
     f84:	cf 91       	pop	r28
     f86:	df 91       	pop	r29
     f88:	99 27       	eor	r25, r25
     f8a:	87 fd       	sbrc	r24, 7
     f8c:	90 95       	com	r25
     f8e:	08 95       	ret

00000f90 <__prologue_saves__>:
     f90:	2f 92       	push	r2
     f92:	3f 92       	push	r3
     f94:	4f 92       	push	r4
     f96:	5f 92       	push	r5
     f98:	6f 92       	push	r6
     f9a:	7f 92       	push	r7
     f9c:	8f 92       	push	r8
     f9e:	9f 92       	push	r9
     fa0:	af 92       	push	r10
     fa2:	bf 92       	push	r11
     fa4:	cf 92       	push	r12
     fa6:	df 92       	push	r13
     fa8:	ef 92       	push	r14
     faa:	ff 92       	push	r15
     fac:	0f 93       	push	r16
     fae:	1f 93       	push	r17
     fb0:	cf 93       	push	r28
     fb2:	df 93       	push	r29
     fb4:	cd b7       	in	r28, 0x3d	; 61
     fb6:	de b7       	in	r29, 0x3e	; 62
     fb8:	ca 1b       	sub	r28, r26
     fba:	db 0b       	sbc	r29, r27
     fbc:	0f b6       	in	r0, 0x3f	; 63
     fbe:	f8 94       	cli
     fc0:	de bf       	out	0x3e, r29	; 62
     fc2:	0f be       	out	0x3f, r0	; 63
     fc4:	cd bf       	out	0x3d, r28	; 61
     fc6:	09 94       	ijmp

00000fc8 <__epilogue_restores__>:
     fc8:	2a 88       	ldd	r2, Y+18	; 0x12
     fca:	39 88       	ldd	r3, Y+17	; 0x11
     fcc:	48 88       	ldd	r4, Y+16	; 0x10
     fce:	5f 84       	ldd	r5, Y+15	; 0x0f
     fd0:	6e 84       	ldd	r6, Y+14	; 0x0e
     fd2:	7d 84       	ldd	r7, Y+13	; 0x0d
     fd4:	8c 84       	ldd	r8, Y+12	; 0x0c
     fd6:	9b 84       	ldd	r9, Y+11	; 0x0b
     fd8:	aa 84       	ldd	r10, Y+10	; 0x0a
     fda:	b9 84       	ldd	r11, Y+9	; 0x09
     fdc:	c8 84       	ldd	r12, Y+8	; 0x08
     fde:	df 80       	ldd	r13, Y+7	; 0x07
     fe0:	ee 80       	ldd	r14, Y+6	; 0x06
     fe2:	fd 80       	ldd	r15, Y+5	; 0x05
     fe4:	0c 81       	ldd	r16, Y+4	; 0x04
     fe6:	1b 81       	ldd	r17, Y+3	; 0x03
     fe8:	aa 81       	ldd	r26, Y+2	; 0x02
     fea:	b9 81       	ldd	r27, Y+1	; 0x01
     fec:	ce 0f       	add	r28, r30
     fee:	d1 1d       	adc	r29, r1
     ff0:	0f b6       	in	r0, 0x3f	; 63
     ff2:	f8 94       	cli
     ff4:	de bf       	out	0x3e, r29	; 62
     ff6:	0f be       	out	0x3f, r0	; 63
     ff8:	cd bf       	out	0x3d, r28	; 61
     ffa:	ed 01       	movw	r28, r26
     ffc:	08 95       	ret

00000ffe <_exit>:
     ffe:	f8 94       	cli

00001000 <__stop_program>:
    1000:	ff cf       	rjmp	.-2      	; 0x1000 <__stop_program>
